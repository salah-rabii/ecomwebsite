{"ast":null,"code":"// // // src/components/Dashboard/Dashboard.jsx\n// // import React, { useState } from 'react';\n// // import { Link } from \"react-router-dom\"\n\n// // import \"./style.css\";\n// // import Logout from '../Autentification/logout';\n\n// // const AdminDashboard  = ({ shopItems }) => {\n// //   const [isOpen, setIsOpen] = useState(false);\n\n// //   const togglePopup = () => {\n// //     setIsOpen(!isOpen);\n// //   };\n// //   return (\n// //     <div className='dashboard'>\n\n// //       <div className='first'>\n// //       <div className=\"sidebar\">\n// //       <h2>Dashboard</h2>\n// //       <Link to=\"/product\">Products</Link>\n// //       <Link to=\"/users\">Users</Link>\n// //       <Logout/>\n// //     </div>\n// //       </div>\n// //       <div className='second'>\n// //         <div className=\"table-container\">\n\n// //           <div className='end'>\n// //             <button className='edit btn-dash' onClick={togglePopup}>Add Product</button>\n// //             {isOpen && (\n// //               <div className=\"popup-overlay\">\n// //                 <div className=\"popup-content\">\n// //                   <form>\n// //                     <div className=\"form-group\">\n// //                       <label htmlFor=\"name\">Name</label>\n// //                       <input type=\"text\" name=\"title\" id=\"name\" placeholder=\"Type product name\" required />\n// //                     </div>\n\n// //                     <div className=\"form-group\">\n// //                       <label htmlFor=\"price\">Price</label>\n// //                       <input type=\"number\" name=\"price\" id=\"price\" placeholder=\"$2999\" required />\n// //                     </div>\n\n// //                     <div className=\"form-group\">\n// //                       <label htmlFor=\"category-create\">Technology</label>\n// //                       <select id=\"category-create\">\n// //                         <option>Select category</option>\n// //                         <option value=\"men\">Men</option>\n// //                         <option value=\"women\">Women</option>\n// //                         <option value=\"kids\">Kids</option>\n// //                       </select>\n// //                     </div>\n\n// //                     <div className=\"form-group\">\n// //                       <label htmlFor=\"description\">Description</label>\n// //                       <textarea id=\"description\" rows=\"4\" placeholder=\"Enter event description here\"></textarea>\n// //                     </div>\n\n// //                     <div className=\"form-group\">\n// //                       <label htmlFor=\"discount-create\">Discount</label>\n// //                       <select id=\"discount-create\">\n// //                         <option>No</option>\n// //                         <option value=\"5\">5%</option>\n// //                         <option value=\"10\">10%</option>\n// //                         <option value=\"20\">20%</option>\n// //                         <option value=\"30\">30%</option>\n// //                         <option value=\"40\">40%</option>\n// //                         <option value=\"50\">50%</option>\n// //                       </select>\n// //                     </div>\n\n// //                     <div className=\"form-buttons\">\n// //                       <button type=\"submit\" className=\"btn primary\">Add product</button>\n// //                       <button type=\"button\" className=\"btn cancel\" onClick={togglePopup}>\n// //                         <svg\n// //                           aria-hidden=\"true\"\n// //                           className=\"icon\"\n// //                           fill=\"none\"\n// //                           stroke=\"currentColor\"\n// //                           viewBox=\"0 0 24 24\"\n// //                         >\n// //                           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n// //                         </svg>\n// //                         Cancel\n// //                       </button>\n// //                     </div>\n// //                   </form>\n\n// //                 </div>\n// //               </div>\n// //             )}\n\n// //           </div>\n// //           <h2>Product table</h2>\n// //           <table className=\"custom-table\">\n// //             <thead>\n// //               <tr>\n// //                 <th>ID</th>\n// //                 <th>Name</th>\n// //                 <th>price</th>\n// //                 <th>Modify</th>\n// //                 <th>Delete</th>\n// //               </tr>\n// //             </thead>\n// //             <tbody>\n// //               {shopItems.map((user) => (\n// //                 <tr key={user.id}>\n// //                   <td>#{user.id}</td>\n// //                   <td>{user.name}</td>\n// //                   <td>{user.price}</td>\n// //                   <td> <button onClick=\"\" className=\"btn-dash edit\"><i class=\"fas fa-edit\"></i> </button></td>\n// //                   <td> <button onClick=\"\" className=\"btn-dash red\"><i class=\"fa-solid fa-trash\"> </i>  </button></td>\n\n// //                 </tr>\n// //               ))}\n// //             </tbody>\n// //           </table>\n// //         </div>\n\n// //       </div>\n\n// //     </div>\n// //   );\n// // };\n\n// // export default AdminDashboard ;\n\n// // // src/components/Dashboard/Dashboard.jsx\n// import React, { useState, useEffect } from 'react';\n// import { Link } from \"react-router-dom\";\n// import \"./style.css\";\n// import Logout from '../Autentification/logout';\n// import { deleteProduct, getAllProducts, allProducts } from '../../services/productService';\n// import EditProductForm from '../product/EditProductForm';\n\n// const AdminDashboard = ({ shopItems, setShopItems }) => {\n//   const [poItems, setPoItems] = useState([]);\n//   const [isOpen, setIsOpen] = useState(false);\n//   const [isEditOpen, setIsEditOpen] = useState(false);\n//   const [currentProduct, setCurrentProduct] = useState(null);\n//   const [newProduct, setNewProduct] = useState({\n//     name: '',\n//     price: '',\n//     category: '',\n//     description: '',\n//     discount: '0',\n//     gender: '',\n//     image_url: './images/shops/shop-1.png', // Default image\n//     size: 'M',\n//     stock: 10\n//   });\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   // Fetch products when component mounts\n//   useEffect(() => {\n//     const fetchProducts = async () => {\n//       try {\n//         const data = await allProducts();\n//         setPoItems(data);\n//         // Also update shopItems if it's meant to be in sync\n//         setShopItems(data);\n//       } catch (err) {\n//         setError(`Failed to fetch products: ${err.message}`);\n//       }\n//     };\n\n//     fetchProducts();\n//   }, [setShopItems]); // Add setShopItems as dependency\n\n//   const togglePopup = () => {\n//     setIsOpen(!isOpen);\n//     // Reset form when opening/closing\n//     setNewProduct({\n//       name: '',\n//       price: '',\n//       category: '',\n//       description: '',\n//       discount: '0',\n//       gender: '',\n//       image_url: './images/shops/shop-1.png',\n//       size: 'M',\n//       stock: 10\n//     });\n//     setError(null);\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewProduct({\n//       ...newProduct,\n//       [name]: name === 'price' || name === 'stock' ? Number(value) : value\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError(null);\n\n//     // Map category to gender for consistency with your data model\n//     let genderValue = 'unisex';\n//     if (newProduct.category === 'men') genderValue = 'men';\n//     if (newProduct.category === 'women') genderValue = 'women';\n//     if (newProduct.category === 'kids') genderValue = 'kids';\n\n//     // Create product DTO to match your backend expectations\n//     const productDTO = {\n//       name: newProduct.name,\n//       price: Number(newProduct.price),\n//       description: newProduct.description,\n//       discount: Number(newProduct.discount),\n//       gender: genderValue,\n//       image_url: newProduct.image_url,\n//       size: newProduct.size,\n//       stock: Number(newProduct.stock),\n//       categoryId: 2 // Using default category ID from your sample data\n//     };\n\n//     try {\n//       const response = await fetch('/api/products', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(productDTO)\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`Error: ${response.status}`);\n//       }\n\n//       const addedProduct = await response.json();\n\n//       // Update both state arrays with the new product\n//       setShopItems(prevItems => [...prevItems, addedProduct]);\n//       setPoItems(prevItems => [...prevItems, addedProduct]);\n\n//       // Close the popup\n//       togglePopup();\n//     } catch (err) {\n//       setError(`Failed to add product: ${err.message}`);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleEditClick = (product) => {\n//     setCurrentProduct(product);\n//     setIsEditOpen(true);\n//   };\n\n//   const handleProductUpdated = (updatedProduct) => {\n//     // Update the product in both state arrays\n//     setShopItems(prevItems =>\n//       prevItems.map(item => item.id === updatedProduct.id ? updatedProduct : item)\n//     );\n//     setPoItems(prevItems =>\n//       prevItems.map(item => item.id === updatedProduct.id ? updatedProduct : item)\n//     );\n//   };\n\n//   const handleDeleteClick = async (productId) => {\n//     if (window.confirm('Are you sure you want to delete this product?')) {\n//       try {\n//         await deleteProduct(productId);\n//         // Remove the product from both state arrays\n//         setShopItems(prevItems => prevItems.filter(item => item.id !== productId));\n//         setPoItems(prevItems => prevItems.filter(item => item.id !== productId));\n//       } catch (err) {\n//         alert(`Failed to delete product: ${err.message}`);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className='dashboard'>\n//       <div className='first'>\n//         <div className=\"sidebar\">\n//           <h2>Dashboard</h2>\n//           <Link to=\"/product\">Products</Link>\n//           <Link to=\"/users\">Users</Link>\n//           <Logout/>\n//         </div>\n//       </div>\n//       <div className='second'>\n//         <div className=\"table-container\">\n//           <div className='end'>\n//             <button className='edit btn-dash' onClick={togglePopup}>Add Product</button>\n//             {isOpen && (\n//               <div className=\"popup-overlay\">\n//                 <div className=\"popup-content\">\n//                   {error && <div className=\"error-message\">{error}</div>}\n//                   <form onSubmit={handleSubmit}>\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"name\">Name</label>\n//                       <input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         id=\"name\"\n//                         placeholder=\"Type product name\"\n//                         value={newProduct.name}\n//                         onChange={handleInputChange}\n//                         required\n//                       />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"price\">Price</label>\n//                       <input\n//                         type=\"number\"\n//                         name=\"price\"\n//                         id=\"price\"\n//                         placeholder=\"$2999\"\n//                         value={newProduct.price}\n//                         onChange={handleInputChange}\n//                         required\n//                       />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"category\">Category</label>\n//                       <select\n//                         id=\"category\"\n//                         name=\"category\"\n//                         value={newProduct.category}\n//                         onChange={handleInputChange}\n//                         required\n//                       >\n//                         <option value=\"\">Select category</option>\n//                         <option value=\"men\">Men</option>\n//                         <option value=\"women\">Women</option>\n//                         <option value=\"kids\">Kids</option>\n//                       </select>\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"description\">Description</label>\n//                       <textarea\n//                         id=\"description\"\n//                         name=\"description\"\n//                         rows=\"4\"\n//                         placeholder=\"Enter product description here\"\n//                         value={newProduct.description}\n//                         onChange={handleInputChange}\n//                         required\n//                       ></textarea>\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"discount\">Discount</label>\n//                       <select\n//                         id=\"discount\"\n//                         name=\"discount\"\n//                         value={newProduct.discount}\n//                         onChange={handleInputChange}\n//                       >\n//                         <option value=\"0\">No</option>\n//                         <option value=\"5\">5%</option>\n//                         <option value=\"10\">10%</option>\n//                         <option value=\"20\">20%</option>\n//                         <option value=\"30\">30%</option>\n//                         <option value=\"40\">40%</option>\n//                         <option value=\"50\">50%</option>\n//                       </select>\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"stock\">Stock</label>\n//                       <input\n//                         type=\"number\"\n//                         name=\"stock\"\n//                         id=\"stock\"\n//                         placeholder=\"10\"\n//                         value={newProduct.stock}\n//                         onChange={handleInputChange}\n//                         required\n//                       />\n//                     </div>\n\n//                     <div className=\"form-buttons\">\n//                       <button\n//                         type=\"submit\"\n//                         className=\"btn primary\"\n//                         disabled={loading}\n//                       >\n//                         {loading ? 'Adding...' : 'Add product'}\n//                       </button>\n//                       <button\n//                         type=\"button\"\n//                         className=\"btn cancel\"\n//                         onClick={togglePopup}\n//                       >\n//                         <svg\n//                           aria-hidden=\"true\"\n//                           className=\"icon\"\n//                           fill=\"none\"\n//                           stroke=\"currentColor\"\n//                           viewBox=\"0 0 24 24\"\n//                         >\n//                           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n//                         </svg>\n//                         Cancel\n//                       </button>\n//                     </div>\n//                   </form>\n//                 </div>\n//               </div>\n//             )}\n//           </div>\n//           <h2>Product table</h2>\n//           {error && <div className=\"error-message\">{error}</div>}\n//           <table className=\"custom-table\">\n//             <thead>\n//               <tr>\n//                 <th>ID</th>\n//                 <th>Name</th>\n//                 <th>Price</th>\n//                 <th>Modify</th>\n//                 <th>Delete</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {poItems.map((product) => (\n//                 <tr key={product.id}>\n//                   <td>#{product.id}</td>\n//                   <td>{product.name}</td>\n//                   <td>${product.price}</td>\n//                   <td>\n//                     <button\n//                       className=\"btn-dash edit\"\n//                       onClick={() => handleEditClick(product)}\n//                     >\n//                       <i className=\"fas fa-edit\"></i>\n//                     </button>\n//                   </td>\n//                   <td>\n//                     <button\n//                       className=\"btn-dash red\"\n//                       onClick={() => handleDeleteClick(product.id)}\n//                     >\n//                       <i className=\"fa-solid fa-trash\"></i>\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n\n//       {isEditOpen && currentProduct && (\n//         <EditProductForm\n//           product={currentProduct}\n//           onClose={() => setIsEditOpen(false)}\n//           onProductUpdated={handleProductUpdated}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;","map":{"version":3,"names":[],"sources":["C:/Users/salah/Downloads/project - Copie/src/components/Dashboard/admindashboard.jsx"],"sourcesContent":["// // // src/components/Dashboard/Dashboard.jsx\r\n// // import React, { useState } from 'react';\r\n// // import { Link } from \"react-router-dom\"\r\n\r\n// // import \"./style.css\";\r\n// // import Logout from '../Autentification/logout';\r\n\r\n// // const AdminDashboard  = ({ shopItems }) => {\r\n// //   const [isOpen, setIsOpen] = useState(false);\r\n\r\n// //   const togglePopup = () => {\r\n// //     setIsOpen(!isOpen);\r\n// //   };\r\n// //   return (\r\n// //     <div className='dashboard'>\r\n\r\n// //       <div className='first'>\r\n// //       <div className=\"sidebar\">\r\n// //       <h2>Dashboard</h2>\r\n// //       <Link to=\"/product\">Products</Link>\r\n// //       <Link to=\"/users\">Users</Link>\r\n// //       <Logout/>\r\n// //     </div>\r\n// //       </div>\r\n// //       <div className='second'>\r\n// //         <div className=\"table-container\">\r\n\r\n// //           <div className='end'>\r\n// //             <button className='edit btn-dash' onClick={togglePopup}>Add Product</button>\r\n// //             {isOpen && (\r\n// //               <div className=\"popup-overlay\">\r\n// //                 <div className=\"popup-content\">\r\n// //                   <form>\r\n// //                     <div className=\"form-group\">\r\n// //                       <label htmlFor=\"name\">Name</label>\r\n// //                       <input type=\"text\" name=\"title\" id=\"name\" placeholder=\"Type product name\" required />\r\n// //                     </div>\r\n\r\n// //                     <div className=\"form-group\">\r\n// //                       <label htmlFor=\"price\">Price</label>\r\n// //                       <input type=\"number\" name=\"price\" id=\"price\" placeholder=\"$2999\" required />\r\n// //                     </div>\r\n\r\n// //                     <div className=\"form-group\">\r\n// //                       <label htmlFor=\"category-create\">Technology</label>\r\n// //                       <select id=\"category-create\">\r\n// //                         <option>Select category</option>\r\n// //                         <option value=\"men\">Men</option>\r\n// //                         <option value=\"women\">Women</option>\r\n// //                         <option value=\"kids\">Kids</option>\r\n// //                       </select>\r\n// //                     </div>\r\n\r\n// //                     <div className=\"form-group\">\r\n// //                       <label htmlFor=\"description\">Description</label>\r\n// //                       <textarea id=\"description\" rows=\"4\" placeholder=\"Enter event description here\"></textarea>\r\n// //                     </div>\r\n\r\n// //                     <div className=\"form-group\">\r\n// //                       <label htmlFor=\"discount-create\">Discount</label>\r\n// //                       <select id=\"discount-create\">\r\n// //                         <option>No</option>\r\n// //                         <option value=\"5\">5%</option>\r\n// //                         <option value=\"10\">10%</option>\r\n// //                         <option value=\"20\">20%</option>\r\n// //                         <option value=\"30\">30%</option>\r\n// //                         <option value=\"40\">40%</option>\r\n// //                         <option value=\"50\">50%</option>\r\n// //                       </select>\r\n// //                     </div>\r\n\r\n// //                     <div className=\"form-buttons\">\r\n// //                       <button type=\"submit\" className=\"btn primary\">Add product</button>\r\n// //                       <button type=\"button\" className=\"btn cancel\" onClick={togglePopup}>\r\n// //                         <svg\r\n// //                           aria-hidden=\"true\"\r\n// //                           className=\"icon\"\r\n// //                           fill=\"none\"\r\n// //                           stroke=\"currentColor\"\r\n// //                           viewBox=\"0 0 24 24\"\r\n// //                         >\r\n// //                           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n// //                         </svg>\r\n// //                         Cancel\r\n// //                       </button>\r\n// //                     </div>\r\n// //                   </form>\r\n\r\n// //                 </div>\r\n// //               </div>\r\n// //             )}\r\n\r\n// //           </div>\r\n// //           <h2>Product table</h2>\r\n// //           <table className=\"custom-table\">\r\n// //             <thead>\r\n// //               <tr>\r\n// //                 <th>ID</th>\r\n// //                 <th>Name</th>\r\n// //                 <th>price</th>\r\n// //                 <th>Modify</th>\r\n// //                 <th>Delete</th>\r\n// //               </tr>\r\n// //             </thead>\r\n// //             <tbody>\r\n// //               {shopItems.map((user) => (\r\n// //                 <tr key={user.id}>\r\n// //                   <td>#{user.id}</td>\r\n// //                   <td>{user.name}</td>\r\n// //                   <td>{user.price}</td>\r\n// //                   <td> <button onClick=\"\" className=\"btn-dash edit\"><i class=\"fas fa-edit\"></i> </button></td>\r\n// //                   <td> <button onClick=\"\" className=\"btn-dash red\"><i class=\"fa-solid fa-trash\"> </i>  </button></td>\r\n\r\n// //                 </tr>\r\n// //               ))}\r\n// //             </tbody>\r\n// //           </table>\r\n// //         </div>\r\n\r\n// //       </div>\r\n\r\n\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default AdminDashboard ;\r\n\r\n\r\n\r\n// // // src/components/Dashboard/Dashboard.jsx\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Link } from \"react-router-dom\";\r\n// import \"./style.css\";\r\n// import Logout from '../Autentification/logout';\r\n// import { deleteProduct, getAllProducts, allProducts } from '../../services/productService';\r\n// import EditProductForm from '../product/EditProductForm';\r\n\r\n// const AdminDashboard = ({ shopItems, setShopItems }) => {\r\n//   const [poItems, setPoItems] = useState([]);\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n//   const [isEditOpen, setIsEditOpen] = useState(false);\r\n//   const [currentProduct, setCurrentProduct] = useState(null);\r\n//   const [newProduct, setNewProduct] = useState({\r\n//     name: '',\r\n//     price: '',\r\n//     category: '',\r\n//     description: '',\r\n//     discount: '0',\r\n//     gender: '',\r\n//     image_url: './images/shops/shop-1.png', // Default image\r\n//     size: 'M',\r\n//     stock: 10\r\n//   });\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   // Fetch products when component mounts\r\n//   useEffect(() => {\r\n//     const fetchProducts = async () => {\r\n//       try {\r\n//         const data = await allProducts();\r\n//         setPoItems(data);\r\n//         // Also update shopItems if it's meant to be in sync\r\n//         setShopItems(data);\r\n//       } catch (err) {\r\n//         setError(`Failed to fetch products: ${err.message}`);\r\n//       }\r\n//     };\r\n    \r\n//     fetchProducts();\r\n//   }, [setShopItems]); // Add setShopItems as dependency\r\n\r\n//   const togglePopup = () => {\r\n//     setIsOpen(!isOpen);\r\n//     // Reset form when opening/closing\r\n//     setNewProduct({\r\n//       name: '',\r\n//       price: '',\r\n//       category: '',\r\n//       description: '',\r\n//       discount: '0',\r\n//       gender: '',\r\n//       image_url: './images/shops/shop-1.png',\r\n//       size: 'M',\r\n//       stock: 10\r\n//     });\r\n//     setError(null);\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setNewProduct({\r\n//       ...newProduct,\r\n//       [name]: name === 'price' || name === 'stock' ? Number(value) : value\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     setError(null);\r\n\r\n//     // Map category to gender for consistency with your data model\r\n//     let genderValue = 'unisex';\r\n//     if (newProduct.category === 'men') genderValue = 'men';\r\n//     if (newProduct.category === 'women') genderValue = 'women';\r\n//     if (newProduct.category === 'kids') genderValue = 'kids';\r\n\r\n//     // Create product DTO to match your backend expectations\r\n//     const productDTO = {\r\n//       name: newProduct.name,\r\n//       price: Number(newProduct.price),\r\n//       description: newProduct.description,\r\n//       discount: Number(newProduct.discount),\r\n//       gender: genderValue,\r\n//       image_url: newProduct.image_url,\r\n//       size: newProduct.size,\r\n//       stock: Number(newProduct.stock),\r\n//       categoryId: 2 // Using default category ID from your sample data\r\n//     };\r\n\r\n//     try {\r\n//       const response = await fetch('/api/products', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(productDTO)\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(`Error: ${response.status}`);\r\n//       }\r\n\r\n//       const addedProduct = await response.json();\r\n\r\n//       // Update both state arrays with the new product\r\n//       setShopItems(prevItems => [...prevItems, addedProduct]);\r\n//       setPoItems(prevItems => [...prevItems, addedProduct]);\r\n\r\n//       // Close the popup\r\n//       togglePopup();\r\n//     } catch (err) {\r\n//       setError(`Failed to add product: ${err.message}`);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleEditClick = (product) => {\r\n//     setCurrentProduct(product);\r\n//     setIsEditOpen(true);\r\n//   };\r\n\r\n//   const handleProductUpdated = (updatedProduct) => {\r\n//     // Update the product in both state arrays\r\n//     setShopItems(prevItems =>\r\n//       prevItems.map(item => item.id === updatedProduct.id ? updatedProduct : item)\r\n//     );\r\n//     setPoItems(prevItems =>\r\n//       prevItems.map(item => item.id === updatedProduct.id ? updatedProduct : item)\r\n//     );\r\n//   };\r\n\r\n//   const handleDeleteClick = async (productId) => {\r\n//     if (window.confirm('Are you sure you want to delete this product?')) {\r\n//       try {\r\n//         await deleteProduct(productId);\r\n//         // Remove the product from both state arrays\r\n//         setShopItems(prevItems => prevItems.filter(item => item.id !== productId));\r\n//         setPoItems(prevItems => prevItems.filter(item => item.id !== productId));\r\n//       } catch (err) {\r\n//         alert(`Failed to delete product: ${err.message}`);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className='dashboard'>\r\n//       <div className='first'>\r\n//         <div className=\"sidebar\">\r\n//           <h2>Dashboard</h2>\r\n//           <Link to=\"/product\">Products</Link>\r\n//           <Link to=\"/users\">Users</Link>\r\n//           <Logout/>\r\n//         </div>\r\n//       </div>\r\n//       <div className='second'>\r\n//         <div className=\"table-container\">\r\n//           <div className='end'>\r\n//             <button className='edit btn-dash' onClick={togglePopup}>Add Product</button>\r\n//             {isOpen && (\r\n//               <div className=\"popup-overlay\">\r\n//                 <div className=\"popup-content\">\r\n//                   {error && <div className=\"error-message\">{error}</div>}\r\n//                   <form onSubmit={handleSubmit}>\r\n//                     <div className=\"form-group\">\r\n//                       <label htmlFor=\"name\">Name</label>\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         name=\"name\"\r\n//                         id=\"name\"\r\n//                         placeholder=\"Type product name\"\r\n//                         value={newProduct.name}\r\n//                         onChange={handleInputChange}\r\n//                         required\r\n//                       />\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                       <label htmlFor=\"price\">Price</label>\r\n//                       <input\r\n//                         type=\"number\"\r\n//                         name=\"price\"\r\n//                         id=\"price\"\r\n//                         placeholder=\"$2999\"\r\n//                         value={newProduct.price}\r\n//                         onChange={handleInputChange}\r\n//                         required\r\n//                       />\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                       <label htmlFor=\"category\">Category</label>\r\n//                       <select\r\n//                         id=\"category\"\r\n//                         name=\"category\"\r\n//                         value={newProduct.category}\r\n//                         onChange={handleInputChange}\r\n//                         required\r\n//                       >\r\n//                         <option value=\"\">Select category</option>\r\n//                         <option value=\"men\">Men</option>\r\n//                         <option value=\"women\">Women</option>\r\n//                         <option value=\"kids\">Kids</option>\r\n//                       </select>\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                       <label htmlFor=\"description\">Description</label>\r\n//                       <textarea\r\n//                         id=\"description\"\r\n//                         name=\"description\"\r\n//                         rows=\"4\"\r\n//                         placeholder=\"Enter product description here\"\r\n//                         value={newProduct.description}\r\n//                         onChange={handleInputChange}\r\n//                         required\r\n//                       ></textarea>\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                       <label htmlFor=\"discount\">Discount</label>\r\n//                       <select\r\n//                         id=\"discount\"\r\n//                         name=\"discount\"\r\n//                         value={newProduct.discount}\r\n//                         onChange={handleInputChange}\r\n//                       >\r\n//                         <option value=\"0\">No</option>\r\n//                         <option value=\"5\">5%</option>\r\n//                         <option value=\"10\">10%</option>\r\n//                         <option value=\"20\">20%</option>\r\n//                         <option value=\"30\">30%</option>\r\n//                         <option value=\"40\">40%</option>\r\n//                         <option value=\"50\">50%</option>\r\n//                       </select>\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                       <label htmlFor=\"stock\">Stock</label>\r\n//                       <input\r\n//                         type=\"number\"\r\n//                         name=\"stock\"\r\n//                         id=\"stock\"\r\n//                         placeholder=\"10\"\r\n//                         value={newProduct.stock}\r\n//                         onChange={handleInputChange}\r\n//                         required\r\n//                       />\r\n//                     </div>\r\n\r\n//                     <div className=\"form-buttons\">\r\n//                       <button\r\n//                         type=\"submit\"\r\n//                         className=\"btn primary\"\r\n//                         disabled={loading}\r\n//                       >\r\n//                         {loading ? 'Adding...' : 'Add product'}\r\n//                       </button>\r\n//                       <button\r\n//                         type=\"button\"\r\n//                         className=\"btn cancel\"\r\n//                         onClick={togglePopup}\r\n//                       >\r\n//                         <svg\r\n//                           aria-hidden=\"true\"\r\n//                           className=\"icon\"\r\n//                           fill=\"none\"\r\n//                           stroke=\"currentColor\"\r\n//                           viewBox=\"0 0 24 24\"\r\n//                         >\r\n//                           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n//                         </svg>\r\n//                         Cancel\r\n//                       </button>\r\n//                     </div>\r\n//                   </form>\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//           <h2>Product table</h2>\r\n//           {error && <div className=\"error-message\">{error}</div>}\r\n//           <table className=\"custom-table\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>ID</th>\r\n//                 <th>Name</th>\r\n//                 <th>Price</th>\r\n//                 <th>Modify</th>\r\n//                 <th>Delete</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {poItems.map((product) => (\r\n//                 <tr key={product.id}>\r\n//                   <td>#{product.id}</td>\r\n//                   <td>{product.name}</td>\r\n//                   <td>${product.price}</td>\r\n//                   <td>\r\n//                     <button\r\n//                       className=\"btn-dash edit\"\r\n//                       onClick={() => handleEditClick(product)}\r\n//                     >\r\n//                       <i className=\"fas fa-edit\"></i>\r\n//                     </button>\r\n//                   </td>\r\n//                   <td>\r\n//                     <button\r\n//                       className=\"btn-dash red\"\r\n//                       onClick={() => handleDeleteClick(product.id)}\r\n//                     >\r\n//                       <i className=\"fa-solid fa-trash\"></i>\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </div>\r\n      \r\n//       {isEditOpen && currentProduct && (\r\n//         <EditProductForm\r\n//           product={currentProduct}\r\n//           onClose={() => setIsEditOpen(false)}\r\n//           onProductUpdated={handleProductUpdated}\r\n//         />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AdminDashboard;"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module"}