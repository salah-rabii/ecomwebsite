{"ast":null,"code":"\n// import axios from 'axios';\n\n// const API_BASE_URL = 'http://localhost:8080/api/products';\n\n// export const addProduct = async (productData) => {\n//   try {\n//     const response = await axios.post(API_BASE_URL, productData);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error adding product:', error.response || error);\n//     throw error;\n//   }\n// };\n\n// export const updateProduct = async (productId, productData) => {\n//   try {\n//     const response = await axios.put(`${API_BASE_URL}/${productId}`, productData);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error updating product:', error.response || error);\n//     throw error;\n//   }\n// };\n\n// export const deleteProduct = async (productId) => {\n//   try {\n//     await axios.delete(`${API_BASE_URL}/${productId}`);\n//     return true;\n//   } catch (error) {\n//     console.error('Error deleting product:', error.response || error);\n//     throw error;\n//   }\n// };\n\n// export const getAllProducts = async () => {\n//   try {\n//     const response = await fetch(`${API_BASE_URL}?size=100`);\n\n//     // Log status for debugging\n//     console.log(\"Response status:\", response.status);\n\n//     // Check if response is ok (status 200-299)\n//     if (!response.ok) {\n//       // Try to get text content to see the error\n//       const textContent = await response.text();\n//       console.error(\"Error response:\", textContent);\n//       throw new Error(`HTTP error! Status: ${response.status}`);\n//     }\n\n//     // Only try to parse JSON if we got a successful response\n//     return await response.json();\n//   } catch (error) {\n//     console.error(\"Error fetching products:\", error);\n//     throw error;\n//   }\n// };\n\n// // Remove or fix the allProducts function since getAllProducts is better implemented\n// // If you need to keep both for backward compatibility:\n// export const allProducts = async () => {\n//   return getAllProducts();\n// };\n\n// import axios from 'axios';\n\n// const API_BASE_URL = 'http://localhost:8080/api/products';\n\n// // Add authentication token if needed\n// const getAuthHeader = () => {\n//   const token = localStorage.getItem('token');\n//   return token ? { Authorization: `Bearer ${token}` } : {};\n// };\n\n// export const addProduct = async (productData) => {\n//   try {\n//     console.log(\"hello helllo\");\n//     const response = await axios.post(API_BASE_URL, productData, {\n//       headers: {\n//         'Content-Type': 'application/json',\n//         ...getAuthHeader()\n//       }\n//     });\n//     return response.data;\n//   } catch (error) {\n//     console.log(error);\n//     console.error('Error adding product:', error.response?.data || error.message);\n//     throw new Error(error.response?.data?.message || 'Failed to add product');\n//   }\n// };\n\n// export const updateProduct = async (id, productData) => {\n//   const response = await axios.put(\n//     `http://localhost:8080/api/products/${id}`,\n//     productData,\n//     {\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${localStorage.getItem('token')}`,\n//       },\n//     }\n//   );\n//   return response.data;\n// };\n\n// export const deleteProduct = async (productId) => {\n//   try {\n//     await axios.delete(`${API_BASE_URL}/${productId}`, {\n//       headers: getAuthHeader()\n//     });\n//     return true;\n//   } catch (error) {\n//     console.error('Error deleting product:', error.response?.data || error.message);\n//     throw new Error(error.response?.data?.message || 'Failed to delete product');\n//   }\n// };\n\n// export const getAllProducts = async () => {\n//   try {\n//     const response = await axios.get(`${API_BASE_URL}?size=100`, {\n//       headers: getAuthHeader()\n//     });\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error fetching products:\", error.response?.data || error.message);\n//     throw new Error(error.response?.data?.message || 'Failed to fetch products');\n//   }\n// };\n\n// // For backward compatibility\n// export const allProducts = async () => {\n//   return getAllProducts();\n// };\n\n// // Method to count products in a specific category\n// export const countProductsByCategory = async (categoryId) => {\n//    try {\n//      const response = await axios.get(`${API_BASE_URL}/count-by-category/${categoryId}`, {\n//      headers: getAuthHeader()\n//    });\n//      return response.data;\n//     } catch (error) {\n//       console.error(`Error counting products in category ${categoryId}:`, error.response?.data || error.message);\n//        if (error.response?.status === 404) {\n\n//         return 0; // Or handle the not found case as needed\n//    }\n//    throw new Error(error.response?.data?.message || `Failed to count products in category ${categoryId}`);\n//    }\n//   };","map":{"version":3,"names":[],"sources":["C:/Users/salah/Downloads/project - Copie/src/services/productService.js"],"sourcesContent":["\r\n// import axios from 'axios';\r\n\r\n// const API_BASE_URL = 'http://localhost:8080/api/products';\r\n\r\n// export const addProduct = async (productData) => {\r\n//   try {\r\n//     const response = await axios.post(API_BASE_URL, productData);\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error('Error adding product:', error.response || error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// export const updateProduct = async (productId, productData) => {\r\n//   try {\r\n//     const response = await axios.put(`${API_BASE_URL}/${productId}`, productData);\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error('Error updating product:', error.response || error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// export const deleteProduct = async (productId) => {\r\n//   try {\r\n//     await axios.delete(`${API_BASE_URL}/${productId}`);\r\n//     return true;\r\n//   } catch (error) {\r\n//     console.error('Error deleting product:', error.response || error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// export const getAllProducts = async () => {\r\n//   try {\r\n//     const response = await fetch(`${API_BASE_URL}?size=100`);\r\n    \r\n//     // Log status for debugging\r\n//     console.log(\"Response status:\", response.status);\r\n\r\n//     // Check if response is ok (status 200-299)\r\n//     if (!response.ok) {\r\n//       // Try to get text content to see the error\r\n//       const textContent = await response.text();\r\n//       console.error(\"Error response:\", textContent);\r\n//       throw new Error(`HTTP error! Status: ${response.status}`);\r\n//     }\r\n\r\n//     // Only try to parse JSON if we got a successful response\r\n//     return await response.json();\r\n//   } catch (error) {\r\n//     console.error(\"Error fetching products:\", error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // Remove or fix the allProducts function since getAllProducts is better implemented\r\n// // If you need to keep both for backward compatibility:\r\n// export const allProducts = async () => {\r\n//   return getAllProducts();\r\n// };\r\n\r\n\r\n// import axios from 'axios';\r\n\r\n// const API_BASE_URL = 'http://localhost:8080/api/products';\r\n\r\n// // Add authentication token if needed\r\n// const getAuthHeader = () => {\r\n//   const token = localStorage.getItem('token');\r\n//   return token ? { Authorization: `Bearer ${token}` } : {};\r\n// };\r\n\r\n// export const addProduct = async (productData) => {\r\n//   try {\r\n//     console.log(\"hello helllo\");\r\n//     const response = await axios.post(API_BASE_URL, productData, {\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         ...getAuthHeader()\r\n//       }\r\n//     });\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//     console.error('Error adding product:', error.response?.data || error.message);\r\n//     throw new Error(error.response?.data?.message || 'Failed to add product');\r\n//   }\r\n// };\r\n\r\n\r\n\r\n// export const updateProduct = async (id, productData) => {\r\n//   const response = await axios.put(\r\n//     `http://localhost:8080/api/products/${id}`,\r\n//     productData,\r\n//     {\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n//       },\r\n//     }\r\n//   );\r\n//   return response.data;\r\n// };\r\n\r\n\r\n\r\n\r\n// export const deleteProduct = async (productId) => {\r\n//   try {\r\n//     await axios.delete(`${API_BASE_URL}/${productId}`, {\r\n//       headers: getAuthHeader()\r\n//     });\r\n//     return true;\r\n//   } catch (error) {\r\n//     console.error('Error deleting product:', error.response?.data || error.message);\r\n//     throw new Error(error.response?.data?.message || 'Failed to delete product');\r\n//   }\r\n// };\r\n\r\n// export const getAllProducts = async () => {\r\n//   try {\r\n//     const response = await axios.get(`${API_BASE_URL}?size=100`, {\r\n//       headers: getAuthHeader()\r\n//     });\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error(\"Error fetching products:\", error.response?.data || error.message);\r\n//     throw new Error(error.response?.data?.message || 'Failed to fetch products');\r\n//   }\r\n// };\r\n\r\n// // For backward compatibility\r\n// export const allProducts = async () => {\r\n//   return getAllProducts();\r\n// };\r\n\r\n\r\n\r\n\r\n// // Method to count products in a specific category\r\n// export const countProductsByCategory = async (categoryId) => {\r\n//    try {\r\n//      const response = await axios.get(`${API_BASE_URL}/count-by-category/${categoryId}`, {\r\n//      headers: getAuthHeader()\r\n//    });\r\n//      return response.data;\r\n//     } catch (error) {\r\n//       console.error(`Error counting products in category ${categoryId}:`, error.response?.data || error.message);\r\n//        if (error.response?.status === 404) {\r\n  \r\n//         return 0; // Or handle the not found case as needed\r\n//    }\r\n//    throw new Error(error.response?.data?.message || `Failed to count products in category ${categoryId}`);\r\n//    }\r\n//   };\r\n\r\n\r\n"],"mappings":";AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module"}