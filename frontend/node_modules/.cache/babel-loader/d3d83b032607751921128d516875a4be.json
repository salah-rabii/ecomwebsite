{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salah\\\\Downloads\\\\project - Copie\\\\src\\\\components\\\\product\\\\ProductListWithCategoryCount.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { getAllProducts, countProductsByCategory } from '../../'; // Adjust the import path as needed\n\nconst ProductCard = ({\n  product\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, product.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"Price: $\", product.price));\n};\nconst ProductListWithCategoryCount = () => {\n  const [products, setProducts] = useState([]);\n  const [kidsCount, setKidsCount] = useState(0);\n  const [menCount, setMenCount] = useState(0);\n  const [womenCount, setWomenCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const allProductsData = await getAllProducts();\n        setProducts(allProductsData.content || allProductsData); // Handle different API response structures\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    const fetchCategoryCounts = async () => {\n      try {\n        const kidsCountData = await countProductsByCategory(1);\n        setKidsCount(kidsCountData);\n        const menCountData = await countProductsByCategory(2);\n        setMenCount(menCountData);\n        const womenCountData = await countProductsByCategory(3);\n        setWomenCount(womenCountData);\n      } catch (err) {\n        console.error(\"Error fetching category counts:\", err.message);\n        // Optionally set an error state for category counts if needed\n      }\n    };\n    fetchProducts();\n    fetchCategoryCounts();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    }, \"Loading products and category counts...\");\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }\n    }, \"Error loading products: \", error);\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"All Products\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"category-count-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Category Product Counts\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Kids (ID: 1): \", kidsCount), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Men (ID: 2): \", menCount), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Women (ID: 3): \", womenCount)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, products.map(product => /*#__PURE__*/React.createElement(ProductCard, {\n    key: product.id,\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default ProductListWithCategoryCount;","map":{"version":3,"names":["React","useState","useEffect","getAllProducts","countProductsByCategory","ProductCard","product","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","price","ProductListWithCategoryCount","products","setProducts","kidsCount","setKidsCount","menCount","setMenCount","womenCount","setWomenCount","loading","setLoading","error","setError","fetchProducts","allProductsData","content","err","message","fetchCategoryCounts","kidsCountData","menCountData","womenCountData","console","map","key","id"],"sources":["C:/Users/salah/Downloads/project - Copie/src/components/product/ProductListWithCategoryCount.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getAllProducts, countProductsByCategory } from '../../'; // Adjust the import path as needed\r\n\r\nconst ProductCard = ({ product }) => {\r\n  return (\r\n    <div className=\"product-card\">\r\n      <h3>{product.name}</h3>\r\n      <p>Price: ${product.price}</p>\r\n      {/* Other product details */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProductListWithCategoryCount = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [kidsCount, setKidsCount] = useState(0);\r\n  const [menCount, setMenCount] = useState(0);\r\n  const [womenCount, setWomenCount] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const allProductsData = await getAllProducts();\r\n        setProducts(allProductsData.content || allProductsData); // Handle different API response structures\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    const fetchCategoryCounts = async () => {\r\n      try {\r\n        const kidsCountData = await countProductsByCategory(1);\r\n        setKidsCount(kidsCountData);\r\n        const menCountData = await countProductsByCategory(2);\r\n        setMenCount(menCountData);\r\n        const womenCountData = await countProductsByCategory(3);\r\n        setWomenCount(womenCountData);\r\n      } catch (err) {\r\n        console.error(\"Error fetching category counts:\", err.message);\r\n        // Optionally set an error state for category counts if needed\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n    fetchCategoryCounts();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading products and category counts...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error loading products: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>All Products</h2>\r\n      <div className=\"category-count-card\">\r\n        <h3>Category Product Counts</h3>\r\n        <p>Kids (ID: 1): {kidsCount}</p>\r\n        <p>Men (ID: 2): {menCount}</p>\r\n        <p>Women (ID: 3): {womenCount}</p>\r\n      </div>\r\n\r\n      <div className=\"product-grid\">\r\n        {products.map(product => (\r\n          <ProductCard key={product.id} product={product} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductListWithCategoryCount;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,EAAEC,uBAAuB,QAAQ,QAAQ,CAAC,CAAC;;AAElE,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACnC,oBACEN,KAAA,CAAAO,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3Bd,KAAA,CAAAO,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKR,OAAO,CAACS,IAAS,CAAC,eACvBf,KAAA,CAAAO,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,UAAQ,EAACR,OAAO,CAACU,KAAS,CAE1B,CAAC;AAEV,CAAC;AAED,MAAMC,4BAA4B,GAAGA,CAAA,KAAM;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAM4B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,eAAe,GAAG,MAAM5B,cAAc,CAAC,CAAC;QAC9CgB,WAAW,CAACY,eAAe,CAACC,OAAO,IAAID,eAAe,CAAC,CAAC,CAAC;QACzDJ,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZJ,QAAQ,CAACI,GAAG,CAACC,OAAO,CAAC;QACrBP,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,MAAMQ,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,aAAa,GAAG,MAAMhC,uBAAuB,CAAC,CAAC,CAAC;QACtDiB,YAAY,CAACe,aAAa,CAAC;QAC3B,MAAMC,YAAY,GAAG,MAAMjC,uBAAuB,CAAC,CAAC,CAAC;QACrDmB,WAAW,CAACc,YAAY,CAAC;QACzB,MAAMC,cAAc,GAAG,MAAMlC,uBAAuB,CAAC,CAAC,CAAC;QACvDqB,aAAa,CAACa,cAAc,CAAC;MAC/B,CAAC,CAAC,OAAOL,GAAG,EAAE;QACZM,OAAO,CAACX,KAAK,CAAC,iCAAiC,EAAEK,GAAG,CAACC,OAAO,CAAC;QAC7D;MACF;IACF,CAAC;IAEDJ,aAAa,CAAC,CAAC;IACfK,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIT,OAAO,EAAE;IACX,oBAAO1B,KAAA,CAAAO,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAK,yCAA4C,CAAC;EAC3D;EAEA,IAAIc,KAAK,EAAE;IACT,oBAAO5B,KAAA,CAAAO,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAK,0BAAwB,EAACc,KAAW,CAAC;EACnD;EAEA,oBACE5B,KAAA,CAAAO,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEd,KAAA,CAAAO,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,cAAgB,CAAC,eACrBd,KAAA,CAAAO,aAAA;IAAKC,SAAS,EAAC,qBAAqB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClCd,KAAA,CAAAO,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,yBAA2B,CAAC,eAChCd,KAAA,CAAAO,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,gBAAc,EAACM,SAAa,CAAC,eAChCpB,KAAA,CAAAO,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,eAAa,EAACQ,QAAY,CAAC,eAC9BtB,KAAA,CAAAO,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,iBAAe,EAACU,UAAc,CAC9B,CAAC,eAENxB,KAAA,CAAAO,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1BI,QAAQ,CAACsB,GAAG,CAAClC,OAAO,iBACnBN,KAAA,CAAAO,aAAA,CAACF,WAAW;IAACoC,GAAG,EAAEnC,OAAO,CAACoC,EAAG;IAACpC,OAAO,EAAEA,OAAQ;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAClD,CACE,CACF,CAAC;AAEV,CAAC;AAED,eAAeG,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module"}