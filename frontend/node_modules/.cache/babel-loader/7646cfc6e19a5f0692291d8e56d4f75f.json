{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salah\\\\Downloads\\\\Ecomwebsite\\\\frontend\\\\src\\\\components\\\\Autentification\\\\logout.jsx\";\nimport React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AuthService from './authservice';\nimport './style.css';\nconst Logout = ({\n  history,\n  onLogoutSuccess\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleLogout = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      await AuthService.logout();\n\n      // Déclencher un événement personnalisé pour informer les autres composants\n      window.dispatchEvent(new CustomEvent('authStateChanged'));\n\n      // Appeler le callback de succès si fourni\n      if (onLogoutSuccess && typeof onLogoutSuccess === 'function') {\n        onLogoutSuccess();\n      }\n      history.replace('/signin');\n    } catch (error) {\n      console.error('Déconnexion échouée:', error);\n      setError('La déconnexion a échoué. Veuillez réessayer.');\n\n      // Même en cas d'erreur, on déclenche l'événement car le sessionStorage est effacé\n      window.dispatchEvent(new CustomEvent('authStateChanged'));\n\n      // Même en cas d'erreur, on peut rediriger\n      history.replace('/signin');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    className: \"btn btn-sm btn-danger\",\n    style: {\n      fontSize: '0.7rem',\n      padding: '2px 6px',\n      whiteSpace: 'nowrap',\n      minWidth: 'max-content'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, loading ? '...' : 'Déconnexion');\n};\nexport default withRouter(Logout);","map":{"version":3,"names":["React","useState","withRouter","AuthService","Logout","history","onLogoutSuccess","loading","setLoading","error","setError","handleLogout","logout","window","dispatchEvent","CustomEvent","replace","console","createElement","onClick","className","style","fontSize","padding","whiteSpace","minWidth","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/salah/Downloads/Ecomwebsite/frontend/src/components/Autentification/logout.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport AuthService from './authservice';\r\nimport './style.css';\r\n\r\nconst Logout = ({ history, onLogoutSuccess }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleLogout = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      await AuthService.logout();\r\n      \r\n      // Déclencher un événement personnalisé pour informer les autres composants\r\n      window.dispatchEvent(new CustomEvent('authStateChanged'));\r\n      \r\n      // Appeler le callback de succès si fourni\r\n      if (onLogoutSuccess && typeof onLogoutSuccess === 'function') {\r\n        onLogoutSuccess();\r\n      }\r\n      \r\n      history.replace('/signin');\r\n    } catch (error) {\r\n      console.error('Déconnexion échouée:', error);\r\n      setError('La déconnexion a échoué. Veuillez réessayer.');\r\n      \r\n      // Même en cas d'erreur, on déclenche l'événement car le sessionStorage est effacé\r\n      window.dispatchEvent(new CustomEvent('authStateChanged'));\r\n      \r\n      // Même en cas d'erreur, on peut rediriger\r\n      history.replace('/signin');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button \r\n      onClick={handleLogout} \r\n      className=\"btn btn-sm btn-danger\"\r\n      style={{\r\n        fontSize: '0.7rem',\r\n        padding: '2px 6px',\r\n        whiteSpace: 'nowrap',\r\n        minWidth: 'max-content'\r\n      }}\r\n    >\r\n      {loading ? '...' : 'Déconnexion'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default withRouter(Logout);"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,aAAa;AAEpB,MAAMC,MAAM,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAgB,CAAC,KAAK;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BH,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMP,WAAW,CAACS,MAAM,CAAC,CAAC;;MAE1B;MACAC,MAAM,CAACC,aAAa,CAAC,IAAIC,WAAW,CAAC,kBAAkB,CAAC,CAAC;;MAEzD;MACA,IAAIT,eAAe,IAAI,OAAOA,eAAe,KAAK,UAAU,EAAE;QAC5DA,eAAe,CAAC,CAAC;MACnB;MAEAD,OAAO,CAACW,OAAO,CAAC,SAAS,CAAC;IAC5B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdQ,OAAO,CAACR,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CC,QAAQ,CAAC,8CAA8C,CAAC;;MAExD;MACAG,MAAM,CAACC,aAAa,CAAC,IAAIC,WAAW,CAAC,kBAAkB,CAAC,CAAC;;MAEzD;MACAV,OAAO,CAACW,OAAO,CAAC,SAAS,CAAC;IAC5B,CAAC,SAAS;MACRR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACER,KAAA,CAAAkB,aAAA;IACEC,OAAO,EAAER,YAAa;IACtBS,SAAS,EAAC,uBAAuB;IACjCC,KAAK,EAAE;MACLC,QAAQ,EAAE,QAAQ;MAClBC,OAAO,EAAE,SAAS;MAClBC,UAAU,EAAE,QAAQ;MACpBC,QAAQ,EAAE;IACZ,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEDxB,OAAO,GAAG,KAAK,GAAG,aACb,CAAC;AAEb,CAAC;AAED,eAAeL,UAAU,CAACE,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}