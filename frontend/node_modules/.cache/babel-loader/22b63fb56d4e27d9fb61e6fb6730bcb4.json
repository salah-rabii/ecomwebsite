{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salah\\\\Downloads\\\\project - Copie\\\\src\\\\components\\\\product\\\\EditProductForm.jsx\";\n// import React, { useState, useEffect } from 'react';\n// import { updateProduct } from '../../services/productService';\n\n// const EditProductForm = ({ product, onClose, onProductUpdated }) => {\n//   const [editedProduct, setEditedProduct] = useState({\n//     name: product.name,\n//     price: product.price,\n//     description: product.description,\n//     discount: product.discount,\n//     gender: product.gender,\n//     image_url: product.image_url,\n//     size: product.size,\n//     stock: product.stock,\n//     categoryId: product.categoryId || 2\n//   });\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   // Map gender to category for the form\n//   const getCategory = (gender) => {\n//     if (gender === 'men') return 'men';\n//     if (gender === 'women') return 'women';\n//     if (gender === 'kids') return 'kids';\n//     return '';\n//   };\n\n//   useEffect(() => {\n//     setEditedProduct({\n//       name: product.name,\n//       price: product.price,\n//       description: product.description,\n//       discount: product.discount,\n//       gender: product.gender,\n//       image_url: product.image_url,\n//       size: product.size,\n//       stock: product.stock,\n//       categoryId: product.categoryId || 2\n//     });\n//   }, [product]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditedProduct({\n//       ...editedProduct,\n//       [name]: name === 'price' || name === 'stock' || name === 'discount' ? Number(value) : value\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError(null);\n\n//     // Map category to gender for consistency with your data model\n//     let genderValue = editedProduct.gender;\n//     if (e.target.category) {\n//       if (e.target.category.value === 'men') genderValue = 'men';\n//       if (e.target.category.value === 'women') genderValue = 'women';\n//       if (e.target.category.value === 'kids') genderValue = 'kids';\n//     }\n\n//     // Create product DTO to match your backend expectations\n//     const productDTO = {\n//       id: product.id,\n//       name: editedProduct.name,\n//       price: Number(editedProduct.price),\n//       description: editedProduct.description,\n//       discount: Number(editedProduct.discount),\n//       gender: genderValue,\n//       image_url: editedProduct.image_url,\n//       size: editedProduct.size,\n//       stock: Number(editedProduct.stock),\n//       categoryId: editedProduct.categoryId\n//     };\n\n//     try {\n//       const updatedProduct = await updateProduct(product.id, productDTO);\n//       onProductUpdated(updatedProduct);\n//       onClose();\n//     } catch (err) {\n//       setError(`Failed to update product: ${err.message}`);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"popup-overlay\">\n//       <div className=\"popup-content\">\n//         <h3>Edit Product</h3>\n//         {error && <div className=\"error-message\">{error}</div>}\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"name\">Name</label>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               id=\"name\"\n//               value={editedProduct.name}\n//               onChange={handleInputChange}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"price\">Price</label>\n//             <input\n//               type=\"number\"\n//               name=\"price\"\n//               id=\"price\"\n//               value={editedProduct.price}\n//               onChange={handleInputChange}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"category\">Category</label>\n//             <select\n//               id=\"category\"\n//               name=\"category\"\n//               value={getCategory(editedProduct.gender)}\n//               onChange={handleInputChange}\n//               required\n//             >\n//               <option value=\"\">Select category</option>\n//               <option value=\"men\">Men</option>\n//               <option value=\"women\">Women</option>\n//               <option value=\"kids\">Kids</option>\n//             </select>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"description\">Description</label>\n//             <textarea\n//               id=\"description\"\n//               name=\"description\"\n//               rows=\"4\"\n//               value={editedProduct.description}\n//               onChange={handleInputChange}\n//               required\n//             ></textarea>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"discount\">Discount</label>\n//             <select\n//               id=\"discount\"\n//               name=\"discount\"\n//               value={editedProduct.discount}\n//               onChange={handleInputChange}\n//             >\n//               <option value=\"0\">No</option>\n//               <option value=\"5\">5%</option>\n//               <option value=\"10\">10%</option>\n//               <option value=\"20\">20%</option>\n//               <option value=\"30\">30%</option>\n//               <option value=\"40\">40%</option>\n//               <option value=\"50\">50%</option>\n//             </select>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"stock\">Stock</label>\n//             <input\n//               type=\"number\"\n//               name=\"stock\"\n//               id=\"stock\"\n//               value={editedProduct.stock}\n//               onChange={handleInputChange}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-buttons\">\n//             <button\n//               type=\"submit\"\n//               className=\"btn primary\"\n//               disabled={loading}\n//             >\n//               {loading ? 'Updating...' : 'Update product'}\n//             </button>\n//             <button\n//               type=\"button\"\n//               className=\"btn cancel\"\n//               onClick={onClose}\n//             >\n//               Cancel\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EditProductForm;\n\nimport React, { useState, useEffect } from 'react';\nimport { updateProduct } from '../../services/productService';\nconst EditProductForm = ({\n  product,\n  onClose,\n  onProductUpdated\n}) => {\n  const [editedProduct, setEditedProduct] = useState({\n    name: product.name || '',\n    price: product.price || 0,\n    description: product.description || '',\n    discount: product.discount || 0,\n    gender: product.gender || '',\n    image_url: product.image_url || './images/shops/shop-1.png',\n    size: product.size || 'M',\n    stock: product.stock || 0,\n    categoryId: product.categoryId || 2\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Map gender to category for the form\n  const getCategory = gender => {\n    if (gender === 'men') return 'men';\n    if (gender === 'women') return 'women';\n    if (gender === 'kids') return 'kids';\n    return '';\n  };\n  useEffect(() => {\n    setEditedProduct({\n      name: product.name || '',\n      price: product.price || 0,\n      description: product.description || '',\n      discount: product.discount || 0,\n      gender: product.gender || '',\n      image_url: product.image_url || './images/shops/shop-1.png',\n      size: product.size || 'M',\n      stock: product.stock || 0,\n      categoryId: product.categoryId || 2\n    });\n  }, [product]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'category') {\n      // Handle category selection by updating gender\n      let genderValue = '';\n      if (value === 'men') genderValue = 'men';\n      if (value === 'women') genderValue = 'women';\n      if (value === 'kids') genderValue = 'kids';\n      setEditedProduct({\n        ...editedProduct,\n        gender: genderValue\n      });\n    } else {\n      // Handle other inputs normally\n      setEditedProduct({\n        ...editedProduct,\n        [name]: name === 'price' || name === 'stock' || name === 'discount' ? Number(value) : value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Create product DTO to match your backend expectations\n    const productDTO = {\n      id: product.id,\n      name: editedProduct.name,\n      price: Number(editedProduct.price),\n      description: editedProduct.description,\n      discount: Number(editedProduct.discount),\n      gender: editedProduct.gender,\n      image_url: editedProduct.image_url,\n      size: editedProduct.size,\n      stock: Number(editedProduct.stock),\n      categoryId: editedProduct.categoryId\n    };\n    try {\n      const updatedProduct = await updateProduct(product.id, productDTO);\n      onProductUpdated(updatedProduct);\n      onClose();\n    } catch (err) {\n      setError(`Failed to update product: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, \"Edit Product\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 19\n    }\n  }, error), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"edit-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"edit-name\",\n    value: editedProduct.name,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"edit-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"price\",\n    id: \"edit-price\",\n    value: editedProduct.price,\n    onChange: handleInputChange,\n    required: true,\n    min: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"edit-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"edit-category\",\n    name: \"category\",\n    value: getCategory(editedProduct.gender),\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, \"Select category\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"men\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 15\n    }\n  }, \"Men\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"women\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 15\n    }\n  }, \"Women\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"kids\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 15\n    }\n  }, \"Kids\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"edit-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"edit-description\",\n    name: \"description\",\n    rows: \"4\",\n    value: editedProduct.description,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"edit-discount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }, \"Discount\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"edit-discount\",\n    name: \"discount\",\n    value: editedProduct.discount,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 15\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 15\n    }\n  }, \"5%\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 15\n    }\n  }, \"10%\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 15\n    }\n  }, \"20%\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 15\n    }\n  }, \"30%\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"40\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 15\n    }\n  }, \"40%\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 15\n    }\n  }, \"50%\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"edit-stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }, \"Stock\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"stock\",\n    id: \"edit-stock\",\n    value: editedProduct.stock,\n    onChange: handleInputChange,\n    required: true,\n    min: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn primary\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }\n  }, loading ? 'Updating...' : 'Update product'), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn cancel\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))));\n};\nexport default EditProductForm;","map":{"version":3,"names":["React","useState","useEffect","updateProduct","EditProductForm","product","onClose","onProductUpdated","editedProduct","setEditedProduct","name","price","description","discount","gender","image_url","size","stock","categoryId","loading","setLoading","error","setError","getCategory","handleInputChange","e","value","target","genderValue","Number","handleSubmit","preventDefault","productDTO","id","updatedProduct","err","message","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","required","min","rows","disabled","onClick"],"sources":["C:/Users/salah/Downloads/project - Copie/src/components/product/EditProductForm.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { updateProduct } from '../../services/productService';\r\n\r\n// const EditProductForm = ({ product, onClose, onProductUpdated }) => {\r\n//   const [editedProduct, setEditedProduct] = useState({\r\n//     name: product.name,\r\n//     price: product.price,\r\n//     description: product.description,\r\n//     discount: product.discount,\r\n//     gender: product.gender,\r\n//     image_url: product.image_url,\r\n//     size: product.size,\r\n//     stock: product.stock,\r\n//     categoryId: product.categoryId || 2\r\n//   });\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   // Map gender to category for the form\r\n//   const getCategory = (gender) => {\r\n//     if (gender === 'men') return 'men';\r\n//     if (gender === 'women') return 'women';\r\n//     if (gender === 'kids') return 'kids';\r\n//     return '';\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     setEditedProduct({\r\n//       name: product.name,\r\n//       price: product.price,\r\n//       description: product.description,\r\n//       discount: product.discount,\r\n//       gender: product.gender,\r\n//       image_url: product.image_url,\r\n//       size: product.size,\r\n//       stock: product.stock,\r\n//       categoryId: product.categoryId || 2\r\n//     });\r\n//   }, [product]);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setEditedProduct({\r\n//       ...editedProduct,\r\n//       [name]: name === 'price' || name === 'stock' || name === 'discount' ? Number(value) : value\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     setError(null);\r\n\r\n//     // Map category to gender for consistency with your data model\r\n//     let genderValue = editedProduct.gender;\r\n//     if (e.target.category) {\r\n//       if (e.target.category.value === 'men') genderValue = 'men';\r\n//       if (e.target.category.value === 'women') genderValue = 'women';\r\n//       if (e.target.category.value === 'kids') genderValue = 'kids';\r\n//     }\r\n\r\n//     // Create product DTO to match your backend expectations\r\n//     const productDTO = {\r\n//       id: product.id,\r\n//       name: editedProduct.name,\r\n//       price: Number(editedProduct.price),\r\n//       description: editedProduct.description,\r\n//       discount: Number(editedProduct.discount),\r\n//       gender: genderValue,\r\n//       image_url: editedProduct.image_url,\r\n//       size: editedProduct.size,\r\n//       stock: Number(editedProduct.stock),\r\n//       categoryId: editedProduct.categoryId\r\n//     };\r\n\r\n//     try {\r\n//       const updatedProduct = await updateProduct(product.id, productDTO);\r\n//       onProductUpdated(updatedProduct);\r\n//       onClose();\r\n//     } catch (err) {\r\n//       setError(`Failed to update product: ${err.message}`);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"popup-overlay\">\r\n//       <div className=\"popup-content\">\r\n//         <h3>Edit Product</h3>\r\n//         {error && <div className=\"error-message\">{error}</div>}\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"name\">Name</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               id=\"name\"\r\n//               value={editedProduct.name}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"price\">Price</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               name=\"price\"\r\n//               id=\"price\"\r\n//               value={editedProduct.price}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"category\">Category</label>\r\n//             <select\r\n//               id=\"category\"\r\n//               name=\"category\"\r\n//               value={getCategory(editedProduct.gender)}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             >\r\n//               <option value=\"\">Select category</option>\r\n//               <option value=\"men\">Men</option>\r\n//               <option value=\"women\">Women</option>\r\n//               <option value=\"kids\">Kids</option>\r\n//             </select>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"description\">Description</label>\r\n//             <textarea\r\n//               id=\"description\"\r\n//               name=\"description\"\r\n//               rows=\"4\"\r\n//               value={editedProduct.description}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             ></textarea>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"discount\">Discount</label>\r\n//             <select\r\n//               id=\"discount\"\r\n//               name=\"discount\"\r\n//               value={editedProduct.discount}\r\n//               onChange={handleInputChange}\r\n//             >\r\n//               <option value=\"0\">No</option>\r\n//               <option value=\"5\">5%</option>\r\n//               <option value=\"10\">10%</option>\r\n//               <option value=\"20\">20%</option>\r\n//               <option value=\"30\">30%</option>\r\n//               <option value=\"40\">40%</option>\r\n//               <option value=\"50\">50%</option>\r\n//             </select>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"stock\">Stock</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               name=\"stock\"\r\n//               id=\"stock\"\r\n//               value={editedProduct.stock}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-buttons\">\r\n//             <button\r\n//               type=\"submit\"\r\n//               className=\"btn primary\"\r\n//               disabled={loading}\r\n//             >\r\n//               {loading ? 'Updating...' : 'Update product'}\r\n//             </button>\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"btn cancel\"\r\n//               onClick={onClose}\r\n//             >\r\n//               Cancel\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EditProductForm;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { updateProduct } from '../../services/productService';\r\n\r\nconst EditProductForm = ({ product, onClose, onProductUpdated }) => {\r\n  const [editedProduct, setEditedProduct] = useState({\r\n    name: product.name || '',\r\n    price: product.price || 0,\r\n    description: product.description || '',\r\n    discount: product.discount || 0,\r\n    gender: product.gender || '',\r\n    image_url: product.image_url || './images/shops/shop-1.png',\r\n    size: product.size || 'M',\r\n    stock: product.stock || 0,\r\n    categoryId: product.categoryId || 2\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Map gender to category for the form\r\n  const getCategory = (gender) => {\r\n    if (gender === 'men') return 'men';\r\n    if (gender === 'women') return 'women';\r\n    if (gender === 'kids') return 'kids';\r\n    return '';\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEditedProduct({\r\n      name: product.name || '',\r\n      price: product.price || 0,\r\n      description: product.description || '',\r\n      discount: product.discount || 0,\r\n      gender: product.gender || '',\r\n      image_url: product.image_url || './images/shops/shop-1.png',\r\n      size: product.size || 'M',\r\n      stock: product.stock || 0,\r\n      categoryId: product.categoryId || 2\r\n    });\r\n  }, [product]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    if (name === 'category') {\r\n      // Handle category selection by updating gender\r\n      let genderValue = '';\r\n      if (value === 'men') genderValue = 'men';\r\n      if (value === 'women') genderValue = 'women';\r\n      if (value === 'kids') genderValue = 'kids';\r\n      \r\n      setEditedProduct({\r\n        ...editedProduct,\r\n        gender: genderValue\r\n      });\r\n    } else {\r\n      // Handle other inputs normally\r\n      setEditedProduct({\r\n        ...editedProduct,\r\n        [name]: name === 'price' || name === 'stock' || name === 'discount' ? Number(value) : value\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    // Create product DTO to match your backend expectations\r\n    const productDTO = {\r\n      id: product.id,\r\n      name: editedProduct.name,\r\n      price: Number(editedProduct.price),\r\n      description: editedProduct.description,\r\n      discount: Number(editedProduct.discount),\r\n      gender: editedProduct.gender,\r\n      image_url: editedProduct.image_url,\r\n      size: editedProduct.size,\r\n      stock: Number(editedProduct.stock),\r\n      categoryId: editedProduct.categoryId\r\n    };\r\n\r\n    try {\r\n      const updatedProduct = await updateProduct(product.id, productDTO);\r\n      onProductUpdated(updatedProduct);\r\n      onClose();\r\n    } catch (err) {\r\n      setError(`Failed to update product: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"popup-overlay\">\r\n      <div className=\"popup-content\">\r\n        <h3>Edit Product</h3>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"edit-name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"edit-name\"\r\n              value={editedProduct.name}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"edit-price\">Price</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"price\"\r\n              id=\"edit-price\"\r\n              value={editedProduct.price}\r\n              onChange={handleInputChange}\r\n              required\r\n              min=\"0\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"edit-category\">Category</label>\r\n            <select\r\n              id=\"edit-category\"\r\n              name=\"category\"\r\n              value={getCategory(editedProduct.gender)}\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select category</option>\r\n              <option value=\"men\">Men</option>\r\n              <option value=\"women\">Women</option>\r\n              <option value=\"kids\">Kids</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"edit-description\">Description</label>\r\n            <textarea\r\n              id=\"edit-description\"\r\n              name=\"description\"\r\n              rows=\"4\"\r\n              value={editedProduct.description}\r\n              onChange={handleInputChange}\r\n              required\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"edit-discount\">Discount</label>\r\n            <select\r\n              id=\"edit-discount\"\r\n              name=\"discount\"\r\n              value={editedProduct.discount}\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"0\">No</option>\r\n              <option value=\"5\">5%</option>\r\n              <option value=\"10\">10%</option>\r\n              <option value=\"20\">20%</option>\r\n              <option value=\"30\">30%</option>\r\n              <option value=\"40\">40%</option>\r\n              <option value=\"50\">50%</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"edit-stock\">Stock</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"stock\"\r\n              id=\"edit-stock\"\r\n              value={editedProduct.stock}\r\n              onChange={handleInputChange}\r\n              required\r\n              min=\"0\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-buttons\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn primary\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Updating...' : 'Update product'}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn cancel\"\r\n              onClick={onClose}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProductForm;"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,+BAA+B;AAE7D,MAAMC,eAAe,GAAGA,CAAC;EAAEC,OAAO;EAAEC,OAAO;EAAEC;AAAiB,CAAC,KAAK;EAClE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC;IACjDS,IAAI,EAAEL,OAAO,CAACK,IAAI,IAAI,EAAE;IACxBC,KAAK,EAAEN,OAAO,CAACM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","ignoreList":[]},"metadata":{},"sourceType":"module"}