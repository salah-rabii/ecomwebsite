{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api/products';\nexport const addProduct = async productData => {\n  try {\n    const response = await axios.post(API_BASE_URL, productData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding product:', error.response || error);\n    throw error;\n  }\n};\nexport const updateProduct = async (productId, productData) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/${productId}`, productData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating product:', error.response || error);\n    throw error;\n  }\n};\nexport const deleteProduct = async productId => {\n  try {\n    await axios.delete(`${API_BASE_URL}/${productId}`);\n    return true;\n  } catch (error) {\n    console.error('Error deleting product:', error.response || error);\n    throw error;\n  }\n};\nexport const getAllProducts = async () => {\n  try {\n    const response = await fetch(`${API_BASE_URL}?size=100`);\n\n    // Log status for debugging\n    console.log(\"Response status:\", response.status);\n\n    // Check if response is ok (status 200-299)\n    if (!response.ok) {\n      // Try to get text content to see the error\n      const textContent = await response.text();\n      console.error(\"Error response:\", textContent);\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    // Only try to parse JSON if we got a successful response\n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching products:\", error);\n    throw error;\n  }\n};\n\n// Remove or fix the allProducts function since getAllProducts is better implemented\n// If you need to keep both for backward compatibility:\nexport const allProducts = async () => {\n  return getAllProducts();\n};","map":{"version":3,"names":["axios","API_BASE_URL","addProduct","productData","response","post","data","error","console","updateProduct","productId","put","deleteProduct","delete","getAllProducts","fetch","log","status","ok","textContent","text","Error","json","allProducts"],"sources":["C:/Users/salah/Downloads/project - Copie/src/services/productService.js"],"sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080/api/products';\r\n\r\nexport const addProduct = async (productData) => {\r\n  try {\r\n    const response = await axios.post(API_BASE_URL, productData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error adding product:', error.response || error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateProduct = async (productId, productData) => {\r\n  try {\r\n    const response = await axios.put(`${API_BASE_URL}/${productId}`, productData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating product:', error.response || error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const deleteProduct = async (productId) => {\r\n  try {\r\n    await axios.delete(`${API_BASE_URL}/${productId}`);\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error deleting product:', error.response || error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAllProducts = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}?size=100`);\r\n    \r\n    // Log status for debugging\r\n    console.log(\"Response status:\", response.status);\r\n\r\n    // Check if response is ok (status 200-299)\r\n    if (!response.ok) {\r\n      // Try to get text content to see the error\r\n      const textContent = await response.text();\r\n      console.error(\"Error response:\", textContent);\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n\r\n    // Only try to parse JSON if we got a successful response\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching products:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Remove or fix the allProducts function since getAllProducts is better implemented\r\n// If you need to keep both for backward compatibility:\r\nexport const allProducts = async () => {\r\n  return getAllProducts();\r\n};"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,oCAAoC;AAEzD,OAAO,MAAMC,UAAU,GAAG,MAAOC,WAAW,IAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,YAAY,EAAEE,WAAW,CAAC;IAC5D,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAAC;IAC/D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAOC,SAAS,EAAEP,WAAW,KAAK;EAC7D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACW,GAAG,CAAC,GAAGV,YAAY,IAAIS,SAAS,EAAE,EAAEP,WAAW,CAAC;IAC7E,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAAC;IACjE,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMK,aAAa,GAAG,MAAOF,SAAS,IAAK;EAChD,IAAI;IACF,MAAMV,KAAK,CAACa,MAAM,CAAC,GAAGZ,YAAY,IAAIS,SAAS,EAAE,CAAC;IAClD,OAAO,IAAI;EACb,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAAC;IACjE,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMW,KAAK,CAAC,GAAGd,YAAY,WAAW,CAAC;;IAExD;IACAO,OAAO,CAACQ,GAAG,CAAC,kBAAkB,EAAEZ,QAAQ,CAACa,MAAM,CAAC;;IAEhD;IACA,IAAI,CAACb,QAAQ,CAACc,EAAE,EAAE;MAChB;MACA,MAAMC,WAAW,GAAG,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC;MACzCZ,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEY,WAAW,CAAC;MAC7C,MAAM,IAAIE,KAAK,CAAC,uBAAuBjB,QAAQ,CAACa,MAAM,EAAE,CAAC;IAC3D;;IAEA;IACA,OAAO,MAAMb,QAAQ,CAACkB,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOf,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;AACA,OAAO,MAAMgB,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,OAAOT,cAAc,CAAC,CAAC;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}