{"ast":null,"code":"// import axios from 'axios';\n\n// const API_BASE_URL = 'http://localhost:8080/api/products';\n\n// export const addProduct = async (productData) => {\n//   try {\n//     const response = await axios.post(API_BASE_URL, productData);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error adding product:', error.response || error);\n//     throw error;\n//   }\n// };\n\n// export const updateProduct = async (productId, productData) => {\n//   try {\n//     const response = await axios.put(`${API_BASE_URL}/${productId}`, productData);\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error updating product:', error.response || error);\n//     throw error;\n//   }\n// };\n\n// export const deleteProduct = async (productId) => {\n//   try {\n//     await axios.delete(`${API_BASE_URL}/${productId}`);\n//     return true;\n//   } catch (error) {\n//     console.error('Error deleting product:', error.response || error);\n//     throw error;\n//   }\n// };\n\n// export const getAllProducts = async () => {\n//   try {\n//     const response = await fetch(`${API_BASE_URL}?size=100`);\n\n//     // Log status for debugging\n//     console.log(\"Response status:\", response.status);\n\n//     // Check if response is ok (status 200-299)\n//     if (!response.ok) {\n//       // Try to get text content to see the error\n//       const textContent = await response.text();\n//       console.error(\"Error response:\", textContent);\n//       throw new Error(`HTTP error! Status: ${response.status}`);\n//     }\n\n//     // Only try to parse JSON if we got a successful response\n//     return await response.json();\n//   } catch (error) {\n//     console.error(\"Error fetching products:\", error);\n//     throw error;\n//   }\n// };\n\n// // Remove or fix the allProducts function since getAllProducts is better implemented\n// // If you need to keep both for backward compatibility:\n// export const allProducts = async () => {\n//   return getAllProducts();\n// };\n\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api/products';\n\n// Add authentication token if needed\nconst getAuthHeader = () => {\n  const token = localStorage.getItem('token');\n  return token ? {\n    Authorization: `Bearer ${token}`\n  } : {};\n};\nexport const addProduct = async productData => {\n  try {\n    console.log(\"hello helllo\");\n    const response = await axios.post(API_BASE_URL, productData, {\n      headers: {\n        'Content-Type': 'application/json',\n        ...getAuthHeader()\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2, _error$response2$data;\n    console.log(error);\n    console.error('Error adding product:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to add product');\n  }\n};\nexport const updateProduct = async (productId, productData) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/${productId}`, productData, {\n      headers: {\n        'Content-Type': 'application/json',\n        ...getAuthHeader()\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response4, _error$response4$data;\n    console.error('Error updating product:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to update product');\n  }\n};\nexport const deleteProduct = async productId => {\n  try {\n    await axios.delete(`${API_BASE_URL}/${productId}`, {\n      headers: getAuthHeader()\n    });\n    return true;\n  } catch (error) {\n    var _error$response5, _error$response6, _error$response6$data;\n    console.error('Error deleting product:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Failed to delete product');\n  }\n};\nexport const getAllProducts = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}?size=100`, {\n      headers: getAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response7, _error$response8, _error$response8$data;\n    console.error(\"Error fetching products:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n    throw new Error(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.message) || 'Failed to fetch products');\n  }\n};\n\n// For backward compatibility\nexport const allProducts = async () => {\n  return getAllProducts();\n};\n\n// Method to count products in a specific category\nexport const countProductsByCategory = async categoryId => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/count-by-category/${categoryId}`, {\n      headers: getAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response9, _error$response10, _error$response11, _error$response11$dat;\n    console.error(`Error counting products in category ${categoryId}:`, ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n    if (((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : _error$response10.status) === 404) {\n      return 0; // Or handle the not found case as needed\n    }\n    throw new Error(((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : (_error$response11$dat = _error$response11.data) === null || _error$response11$dat === void 0 ? void 0 : _error$response11$dat.message) || `Failed to count products in category ${categoryId}`);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","getAuthHeader","token","localStorage","getItem","Authorization","addProduct","productData","console","log","response","post","headers","data","error","_error$response","_error$response2","_error$response2$data","message","Error","updateProduct","productId","put","_error$response3","_error$response4","_error$response4$data","deleteProduct","delete","_error$response5","_error$response6","_error$response6$data","getAllProducts","get","_error$response7","_error$response8","_error$response8$data","allProducts","countProductsByCategory","categoryId","_error$response9","_error$response10","_error$response11","_error$response11$dat","status"],"sources":["C:/Users/salah/Downloads/project - Copie/src/services/productService.js"],"sourcesContent":["\r\n// import axios from 'axios';\r\n\r\n// const API_BASE_URL = 'http://localhost:8080/api/products';\r\n\r\n// export const addProduct = async (productData) => {\r\n//   try {\r\n//     const response = await axios.post(API_BASE_URL, productData);\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error('Error adding product:', error.response || error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// export const updateProduct = async (productId, productData) => {\r\n//   try {\r\n//     const response = await axios.put(`${API_BASE_URL}/${productId}`, productData);\r\n//     return response.data;\r\n//   } catch (error) {\r\n//     console.error('Error updating product:', error.response || error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// export const deleteProduct = async (productId) => {\r\n//   try {\r\n//     await axios.delete(`${API_BASE_URL}/${productId}`);\r\n//     return true;\r\n//   } catch (error) {\r\n//     console.error('Error deleting product:', error.response || error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// export const getAllProducts = async () => {\r\n//   try {\r\n//     const response = await fetch(`${API_BASE_URL}?size=100`);\r\n    \r\n//     // Log status for debugging\r\n//     console.log(\"Response status:\", response.status);\r\n\r\n//     // Check if response is ok (status 200-299)\r\n//     if (!response.ok) {\r\n//       // Try to get text content to see the error\r\n//       const textContent = await response.text();\r\n//       console.error(\"Error response:\", textContent);\r\n//       throw new Error(`HTTP error! Status: ${response.status}`);\r\n//     }\r\n\r\n//     // Only try to parse JSON if we got a successful response\r\n//     return await response.json();\r\n//   } catch (error) {\r\n//     console.error(\"Error fetching products:\", error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// // Remove or fix the allProducts function since getAllProducts is better implemented\r\n// // If you need to keep both for backward compatibility:\r\n// export const allProducts = async () => {\r\n//   return getAllProducts();\r\n// };\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080/api/products';\r\n\r\n// Add authentication token if needed\r\nconst getAuthHeader = () => {\r\n  const token = localStorage.getItem('token');\r\n  return token ? { Authorization: `Bearer ${token}` } : {};\r\n};\r\n\r\nexport const addProduct = async (productData) => {\r\n  try {\r\n    console.log(\"hello helllo\");\r\n    const response = await axios.post(API_BASE_URL, productData, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...getAuthHeader()\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n    console.error('Error adding product:', error.response?.data || error.message);\r\n    throw new Error(error.response?.data?.message || 'Failed to add product');\r\n  }\r\n};\r\n\r\nexport const updateProduct = async (productId, productData) => {\r\n  try {\r\n    const response = await axios.put(`${API_BASE_URL}/${productId}`, productData, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        ...getAuthHeader()\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error updating product:', error.response?.data || error.message);\r\n    throw new Error(error.response?.data?.message || 'Failed to update product');\r\n  }\r\n};\r\n\r\nexport const deleteProduct = async (productId) => {\r\n  try {\r\n    await axios.delete(`${API_BASE_URL}/${productId}`, {\r\n      headers: getAuthHeader()\r\n    });\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error deleting product:', error.response?.data || error.message);\r\n    throw new Error(error.response?.data?.message || 'Failed to delete product');\r\n  }\r\n};\r\n\r\nexport const getAllProducts = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}?size=100`, {\r\n      headers: getAuthHeader()\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching products:\", error.response?.data || error.message);\r\n    throw new Error(error.response?.data?.message || 'Failed to fetch products');\r\n  }\r\n};\r\n\r\n// For backward compatibility\r\nexport const allProducts = async () => {\r\n  return getAllProducts();\r\n};\r\n\r\n\r\n\r\n\r\n// Method to count products in a specific category\r\nexport const countProductsByCategory = async (categoryId) => {\r\n   try {\r\n     const response = await axios.get(`${API_BASE_URL}/count-by-category/${categoryId}`, {\r\n     headers: getAuthHeader()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error counting products in category ${categoryId}:`, error.response?.data || error.message);\r\n      if (error.response?.status === 404) {\r\n        return 0; // Or handle the not found case as needed\r\n      }\r\n      throw new Error(error.response?.data?.message || `Failed to count products in category ${categoryId}`);\r\n    }\r\n  };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}