{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\salah\\\\Downloads\\\\project - Copie\\\\src\\\\components\\\\Dashboard\\\\admindashboard.jsx\";\n// // // src/components/Dashboard/Dashboard.jsx\n// import React, { useState, useEffect } from 'react';\n// import { Link } from \"react-router-dom\";\n// import \"./style.css\";\n// import Logout from '../Autentification/logout';\n// import { deleteProduct, getAllProducts, allProducts } from '../../services/productService';\n// import EditProductForm from '../product/EditProductForm';\n\n// const AdminDashboard = ({ shopItems, setShopItems }) => {\n//   const [poItems, setPoItems] = useState([]);\n//   const [isOpen, setIsOpen] = useState(false);\n//   const [isEditOpen, setIsEditOpen] = useState(false);\n//   const [currentProduct, setCurrentProduct] = useState(null);\n//   const [newProduct, setNewProduct] = useState({\n//     name: '',\n//     price: '',\n//     category: '',\n//     description: '',\n//     discount: '0',\n//     gender: '',\n//     image_url: './images/shops/shop-1.png', // Default image\n//     size: 'M',\n//     stock: 10\n//   });\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   // Fetch products when component mounts\n//   useEffect(() => {\n//     const fetchProducts = async () => {\n//       try {\n//         const data = await allProducts();\n//         setPoItems(data);\n//         // Also update shopItems if it's meant to be in sync\n//         setShopItems(data);\n//       } catch (err) {\n//         setError(`Failed to fetch products: ${err.message}`);\n//       }\n//     };\n\n//     fetchProducts();\n//   }, [setShopItems]); // Add setShopItems as dependency\n\n//   const togglePopup = () => {\n//     setIsOpen(!isOpen);\n//     // Reset form when opening/closing\n//     setNewProduct({\n//       name: '',\n//       price: '',\n//       category: '',\n//       description: '',\n//       discount: '0',\n//       gender: '',\n//       image_url: './images/shops/shop-1.png',\n//       size: 'M',\n//       stock: 10\n//     });\n//     setError(null);\n//   };\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewProduct({\n//       ...newProduct,\n//       [name]: name === 'price' || name === 'stock' ? Number(value) : value\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError(null);\n\n//     // Map category to gender for consistency with your data model\n//     let genderValue = 'unisex';\n//     if (newProduct.category === 'men') genderValue = 'men';\n//     if (newProduct.category === 'women') genderValue = 'women';\n//     if (newProduct.category === 'kids') genderValue = 'kids';\n\n//     // Create product DTO to match your backend expectations\n//     const productDTO = {\n//       name: newProduct.name,\n//       price: Number(newProduct.price),\n//       description: newProduct.description,\n//       discount: Number(newProduct.discount),\n//       gender: genderValue,\n//       image_url: newProduct.image_url,\n//       size: newProduct.size,\n//       stock: Number(newProduct.stock),\n//       categoryId: 2 // Using default category ID from your sample data\n//     };\n\n//     try {\n//       const response = await fetch('/api/products', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(productDTO)\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`Error: ${response.status}`);\n//       }\n\n//       const addedProduct = await response.json();\n\n//       // Update both state arrays with the new product\n//       setShopItems(prevItems => [...prevItems, addedProduct]);\n//       setPoItems(prevItems => [...prevItems, addedProduct]);\n\n//       // Close the popup\n//       togglePopup();\n//     } catch (err) {\n//       setError(`Failed to add product: ${err.message}`);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const handleEditClick = (product) => {\n//     setCurrentProduct(product);\n//     setIsEditOpen(true);\n//   };\n\n//   const handleProductUpdated = (updatedProduct) => {\n//     // Update the product in both state arrays\n//     setShopItems(prevItems =>\n//       prevItems.map(item => item.id === updatedProduct.id ? updatedProduct : item)\n//     );\n//     setPoItems(prevItems =>\n//       prevItems.map(item => item.id === updatedProduct.id ? updatedProduct : item)\n//     );\n//   };\n\n//   const handleDeleteClick = async (productId) => {\n//     if (window.confirm('Are you sure you want to delete this product?')) {\n//       try {\n//         await deleteProduct(productId);\n//         // Remove the product from both state arrays\n//         setShopItems(prevItems => prevItems.filter(item => item.id !== productId));\n//         setPoItems(prevItems => prevItems.filter(item => item.id !== productId));\n//       } catch (err) {\n//         alert(`Failed to delete product: ${err.message}`);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className='dashboard'>\n//       <div className='first'>\n//         <div className=\"sidebar\">\n//           <h2>Dashboard</h2>\n//           <Link to=\"/product\">Products</Link>\n//           <Link to=\"/users\">Users</Link>\n//           <Logout/>\n//         </div>\n//       </div>\n//       <div className='second'>\n//         <div className=\"table-container\">\n//           <div className='end'>\n//             <button className='edit btn-dash' onClick={togglePopup}>Add Product</button>\n//             {isOpen && (\n//               <div className=\"popup-overlay\">\n//                 <div className=\"popup-content\">\n//                   {error && <div className=\"error-message\">{error}</div>}\n//                   <form onSubmit={handleSubmit}>\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"name\">Name</label>\n//                       <input\n//                         type=\"text\"\n//                         name=\"name\"\n//                         id=\"name\"\n//                         placeholder=\"Type product name\"\n//                         value={newProduct.name}\n//                         onChange={handleInputChange}\n//                         required\n//                       />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"price\">Price</label>\n//                       <input\n//                         type=\"number\"\n//                         name=\"price\"\n//                         id=\"price\"\n//                         placeholder=\"$2999\"\n//                         value={newProduct.price}\n//                         onChange={handleInputChange}\n//                         required\n//                       />\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"category\">Category</label>\n//                       <select\n//                         id=\"category\"\n//                         name=\"category\"\n//                         value={newProduct.category}\n//                         onChange={handleInputChange}\n//                         required\n//                       >\n//                         <option value=\"\">Select category</option>\n//                         <option value=\"men\">Men</option>\n//                         <option value=\"women\">Women</option>\n//                         <option value=\"kids\">Kids</option>\n//                       </select>\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"description\">Description</label>\n//                       <textarea\n//                         id=\"description\"\n//                         name=\"description\"\n//                         rows=\"4\"\n//                         placeholder=\"Enter product description here\"\n//                         value={newProduct.description}\n//                         onChange={handleInputChange}\n//                         required\n//                       ></textarea>\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"discount\">Discount</label>\n//                       <select\n//                         id=\"discount\"\n//                         name=\"discount\"\n//                         value={newProduct.discount}\n//                         onChange={handleInputChange}\n//                       >\n//                         <option value=\"0\">No</option>\n//                         <option value=\"5\">5%</option>\n//                         <option value=\"10\">10%</option>\n//                         <option value=\"20\">20%</option>\n//                         <option value=\"30\">30%</option>\n//                         <option value=\"40\">40%</option>\n//                         <option value=\"50\">50%</option>\n//                       </select>\n//                     </div>\n\n//                     <div className=\"form-group\">\n//                       <label htmlFor=\"stock\">Stock</label>\n//                       <input\n//                         type=\"number\"\n//                         name=\"stock\"\n//                         id=\"stock\"\n//                         placeholder=\"10\"\n//                         value={newProduct.stock}\n//                         onChange={handleInputChange}\n//                         required\n//                       />\n//                     </div>\n\n//                     <div className=\"form-buttons\">\n//                       <button\n//                         type=\"submit\"\n//                         className=\"btn primary\"\n//                         disabled={loading}\n//                       >\n//                         {loading ? 'Adding...' : 'Add product'}\n//                       </button>\n//                       <button\n//                         type=\"button\"\n//                         className=\"btn cancel\"\n//                         onClick={togglePopup}\n//                       >\n//                         <svg\n//                           aria-hidden=\"true\"\n//                           className=\"icon\"\n//                           fill=\"none\"\n//                           stroke=\"currentColor\"\n//                           viewBox=\"0 0 24 24\"\n//                         >\n//                           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n//                         </svg>\n//                         Cancel\n//                       </button>\n//                     </div>\n//                   </form>\n//                 </div>\n//               </div>\n//             )}\n//           </div>\n//           <h2>Product table</h2>\n//           {error && <div className=\"error-message\">{error}</div>}\n//           <table className=\"custom-table\">\n//             <thead>\n//               <tr>\n//                 <th>ID</th>\n//                 <th>Name</th>\n//                 <th>Price</th>\n//                 <th>Modify</th>\n//                 <th>Delete</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {poItems.map((product) => (\n//                 <tr key={product.id}>\n//                   <td>#{product.id}</td>\n//                   <td>{product.name}</td>\n//                   <td>${product.price}</td>\n//                   <td>\n//                     <button\n//                       className=\"btn-dash edit\"\n//                       onClick={() => handleEditClick(product)}\n//                     >\n//                       <i className=\"fas fa-edit\"></i>\n//                     </button>\n//                   </td>\n//                   <td>\n//                     <button\n//                       className=\"btn-dash red\"\n//                       onClick={() => handleDeleteClick(product.id)}\n//                     >\n//                       <i className=\"fa-solid fa-trash\"></i>\n//                     </button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n\n//       {isEditOpen && currentProduct && (\n//         <EditProductForm\n//           product={currentProduct}\n//           onClose={() => setIsEditOpen(false)}\n//           onProductUpdated={handleProductUpdated}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport Logout from '../Autentification/logout';\nimport { deleteProduct, getAllProducts, addProduct, updateProduct } from '../../services/productService';\nimport EditProductForm from '../product/EditProductForm';\nconst AdminDashboard = ({\n  shopItems,\n  setShopItems\n}) => {\n  const [products, setProducts] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isEditOpen, setIsEditOpen] = useState(false);\n  const [currentProduct, setCurrentProduct] = useState(null);\n  const [newProduct, setNewProduct] = useState({\n    name: '',\n    price: '',\n    category: '',\n    description: '',\n    discount: '0',\n    gender: '',\n    image_url: './images/shops/shop-1.png',\n    // Default image\n    size: 'M',\n    stock: 10\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // // Fetch products when component mounts\n  // useEffect(() => {\n  //   const fetchProducts = async () => {\n  //     try {\n  //       setLoading(true);\n  //       const data = await getAllProducts();\n  //       setProducts(data);\n  //       // Also update shopItems if it's meant to be in sync\n  //       if (setShopItems) {\n  //         setShopItems(data);\n  //       }\n  //     } catch (err) {\n  //       setError(`Failed to fetch products: ${err.message}`);\n  //     } finally {\n  //       setLoading(false);\n  //     }\n  //   };\n\n  //   fetchProducts();\n  // }, []); // No need for dependencies here\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        setLoading(true);\n        const data = await getAllProducts();\n        setProducts(data);\n        // Also update shopItems if it's meant to be in sync\n        if (setShopItems) {\n          setShopItems(data);\n        }\n      } catch (err) {\n        setError(`Failed to fetch products: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProducts();\n  }, [setShopItems]); // Add setShopItems as dependency\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n    // Reset form when opening/closing\n    setNewProduct({\n      name: '',\n      price: '',\n      category: '',\n      description: '',\n      discount: '0',\n      gender: '',\n      image_url: './images/shops/shop-1.png',\n      size: 'M',\n      stock: 10\n    });\n    setError(null);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewProduct({\n      ...newProduct,\n      [name]: name === 'price' || name === 'stock' ? Number(value) : value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    // Map category to gender for consistency with your data model\n    let genderValue = 'unisex';\n    if (newProduct.category === 'men') genderValue = 'men';\n    if (newProduct.category === 'women') genderValue = 'women';\n    if (newProduct.category === 'kids') genderValue = 'kids';\n\n    // Create product DTO to match your backend expectations\n    const productDTO = {\n      name: newProduct.name,\n      price: Number(newProduct.price),\n      description: newProduct.description,\n      discount: Number(newProduct.discount),\n      gender: genderValue,\n      image_url: newProduct.image_url,\n      size: newProduct.size,\n      stock: Number(newProduct.stock),\n      categoryId: 2 // Using default category ID from your sample data\n    };\n    try {\n      // Use the service function instead of direct fetch\n      const addedProduct = await addProduct(productDTO);\n\n      // Update both state arrays with the new product\n      setProducts(prevItems => [...prevItems, addedProduct]);\n      if (setShopItems) {\n        setShopItems(prevItems => [...prevItems, addedProduct]);\n      }\n\n      // Close the popup\n      togglePopup();\n    } catch (err) {\n      setError(`Failed to add product: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEditClick = product => {\n    setCurrentProduct(product);\n    setIsEditOpen(true);\n  };\n  const handleProductUpdated = updatedProduct => {\n    // Update the product in both state arrays\n    setProducts(prevItems => prevItems.map(item => item.id === updatedProduct.id ? updatedProduct : item));\n    if (setShopItems) {\n      setShopItems(prevItems => prevItems.map(item => item.id === updatedProduct.id ? updatedProduct : item));\n    }\n  };\n  const handleDeleteClick = async productId => {\n    if (window.confirm('Are you sure you want to delete this product?')) {\n      try {\n        setLoading(true);\n        await deleteProduct(productId);\n\n        // Remove the product from both state arrays\n        setProducts(prevItems => prevItems.filter(item => item.id !== productId));\n        if (setShopItems) {\n          setShopItems(prevItems => prevItems.filter(item => item.id !== productId));\n        }\n      } catch (err) {\n        setError(`Failed to delete product: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"first\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 11\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 11\n    }\n  }, \"Products\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/countproduct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 11\n    }\n  }, \"CountProduct\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 11\n    }\n  }, \"Users\"), /*#__PURE__*/React.createElement(Logout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"second\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"edit btn-dash\",\n    onClick: togglePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 13\n    }\n  }, \"Add Product\"), isOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 17\n    }\n  }, error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 29\n    }\n  }, error), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 23\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    placeholder: \"Type product name\",\n    value: newProduct.name,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 23\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"price\",\n    id: \"price\",\n    placeholder: \"$2999\",\n    value: newProduct.price,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 23\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"category\",\n    name: \"category\",\n    value: newProduct.category,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 25\n    }\n  }, \"Select category\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"men\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 25\n    }\n  }, \"Men\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"women\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 25\n    }\n  }, \"Women\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"kids\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 25\n    }\n  }, \"Kids\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 23\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"description\",\n    name: \"description\",\n    rows: \"4\",\n    placeholder: \"Enter product description here\",\n    value: newProduct.description,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"discount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 23\n    }\n  }, \"Discount\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"discount\",\n    name: \"discount\",\n    value: newProduct.discount,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 25\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 25\n    }\n  }, \"5%\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 25\n    }\n  }, \"10%\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 25\n    }\n  }, \"20%\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 25\n    }\n  }, \"30%\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"40\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 25\n    }\n  }, \"40%\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 25\n    }\n  }, \"50%\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 23\n    }\n  }, \"Stock\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"stock\",\n    id: \"stock\",\n    placeholder: \"10\",\n    value: newProduct.stock,\n    onChange: handleInputChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn primary\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 23\n    }\n  }, loading ? 'Adding...' : 'Add product'), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn cancel\",\n    onClick: togglePopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    className: \"icon\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"2\",\n    d: \"M6 18L18 6M6 6l12 12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 27\n    }\n  })), \"Cancel\")))))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 11\n    }\n  }, \"Product table\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 21\n    }\n  }, error), loading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 23\n    }\n  }, \"Loading...\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"custom-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 17\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 17\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 17\n    }\n  }, \"Modify\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 17\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 13\n    }\n  }, products.map(product => /*#__PURE__*/React.createElement(\"tr\", {\n    key: product.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 19\n    }\n  }, \"#\", product.id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 19\n    }\n  }, product.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 19\n    }\n  }, \"$\", product.price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-dash edit\",\n    onClick: () => handleEditClick(product),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-dash red\",\n    onClick: () => handleDeleteClick(product.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa-solid fa-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 23\n    }\n  }))))))))), isEditOpen && currentProduct && /*#__PURE__*/React.createElement(EditProductForm, {\n    product: currentProduct,\n    onClose: () => setIsEditOpen(false),\n    onProductUpdated: handleProductUpdated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 9\n    }\n  }));\n};\nexport default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","Link","Logout","deleteProduct","getAllProducts","addProduct","updateProduct","EditProductForm","AdminDashboard","shopItems","setShopItems","products","setProducts","isOpen","setIsOpen","isEditOpen","setIsEditOpen","currentProduct","setCurrentProduct","newProduct","setNewProduct","name","price","category","description","discount","gender","image_url","size","stock","loading","setLoading","error","setError","fetchProducts","data","err","message","togglePopup","handleInputChange","e","value","target","Number","handleSubmit","preventDefault","genderValue","productDTO","categoryId","addedProduct","prevItems","handleEditClick","product","handleProductUpdated","updatedProduct","map","item","id","handleDeleteClick","productId","window","confirm","filter","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","onSubmit","htmlFor","type","placeholder","onChange","required","rows","disabled","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","key","onClose","onProductUpdated"],"sources":["C:/Users/salah/Downloads/project - Copie/src/components/Dashboard/admindashboard.jsx"],"sourcesContent":["\r\n\r\n// // // src/components/Dashboard/Dashboard.jsx\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Link } from \"react-router-dom\";\r\n// import \"./style.css\";\r\n// import Logout from '../Autentification/logout';\r\n// import { deleteProduct, getAllProducts, allProducts } from '../../services/productService';\r\n// import EditProductForm from '../product/EditProductForm';\r\n\r\n// const AdminDashboard = ({ shopItems, setShopItems }) => {\r\n//   const [poItems, setPoItems] = useState([]);\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n//   const [isEditOpen, setIsEditOpen] = useState(false);\r\n//   const [currentProduct, setCurrentProduct] = useState(null);\r\n//   const [newProduct, setNewProduct] = useState({\r\n//     name: '',\r\n//     price: '',\r\n//     category: '',\r\n//     description: '',\r\n//     discount: '0',\r\n//     gender: '',\r\n//     image_url: './images/shops/shop-1.png', // Default image\r\n//     size: 'M',\r\n//     stock: 10\r\n//   });\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   // Fetch products when component mounts\r\n//   useEffect(() => {\r\n//     const fetchProducts = async () => {\r\n//       try {\r\n//         const data = await allProducts();\r\n//         setPoItems(data);\r\n//         // Also update shopItems if it's meant to be in sync\r\n//         setShopItems(data);\r\n//       } catch (err) {\r\n//         setError(`Failed to fetch products: ${err.message}`);\r\n//       }\r\n//     };\r\n    \r\n//     fetchProducts();\r\n//   }, [setShopItems]); // Add setShopItems as dependency\r\n\r\n//   const togglePopup = () => {\r\n//     setIsOpen(!isOpen);\r\n//     // Reset form when opening/closing\r\n//     setNewProduct({\r\n//       name: '',\r\n//       price: '',\r\n//       category: '',\r\n//       description: '',\r\n//       discount: '0',\r\n//       gender: '',\r\n//       image_url: './images/shops/shop-1.png',\r\n//       size: 'M',\r\n//       stock: 10\r\n//     });\r\n//     setError(null);\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setNewProduct({\r\n//       ...newProduct,\r\n//       [name]: name === 'price' || name === 'stock' ? Number(value) : value\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     setError(null);\r\n\r\n//     // Map category to gender for consistency with your data model\r\n//     let genderValue = 'unisex';\r\n//     if (newProduct.category === 'men') genderValue = 'men';\r\n//     if (newProduct.category === 'women') genderValue = 'women';\r\n//     if (newProduct.category === 'kids') genderValue = 'kids';\r\n\r\n//     // Create product DTO to match your backend expectations\r\n//     const productDTO = {\r\n//       name: newProduct.name,\r\n//       price: Number(newProduct.price),\r\n//       description: newProduct.description,\r\n//       discount: Number(newProduct.discount),\r\n//       gender: genderValue,\r\n//       image_url: newProduct.image_url,\r\n//       size: newProduct.size,\r\n//       stock: Number(newProduct.stock),\r\n//       categoryId: 2 // Using default category ID from your sample data\r\n//     };\r\n\r\n//     try {\r\n//       const response = await fetch('/api/products', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(productDTO)\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(`Error: ${response.status}`);\r\n//       }\r\n\r\n//       const addedProduct = await response.json();\r\n\r\n//       // Update both state arrays with the new product\r\n//       setShopItems(prevItems => [...prevItems, addedProduct]);\r\n//       setPoItems(prevItems => [...prevItems, addedProduct]);\r\n\r\n//       // Close the popup\r\n//       togglePopup();\r\n//     } catch (err) {\r\n//       setError(`Failed to add product: ${err.message}`);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const handleEditClick = (product) => {\r\n//     setCurrentProduct(product);\r\n//     setIsEditOpen(true);\r\n//   };\r\n\r\n//   const handleProductUpdated = (updatedProduct) => {\r\n//     // Update the product in both state arrays\r\n//     setShopItems(prevItems =>\r\n//       prevItems.map(item => item.id === updatedProduct.id ? updatedProduct : item)\r\n//     );\r\n//     setPoItems(prevItems =>\r\n//       prevItems.map(item => item.id === updatedProduct.id ? updatedProduct : item)\r\n//     );\r\n//   };\r\n\r\n//   const handleDeleteClick = async (productId) => {\r\n//     if (window.confirm('Are you sure you want to delete this product?')) {\r\n//       try {\r\n//         await deleteProduct(productId);\r\n//         // Remove the product from both state arrays\r\n//         setShopItems(prevItems => prevItems.filter(item => item.id !== productId));\r\n//         setPoItems(prevItems => prevItems.filter(item => item.id !== productId));\r\n//       } catch (err) {\r\n//         alert(`Failed to delete product: ${err.message}`);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className='dashboard'>\r\n//       <div className='first'>\r\n//         <div className=\"sidebar\">\r\n//           <h2>Dashboard</h2>\r\n//           <Link to=\"/product\">Products</Link>\r\n//           <Link to=\"/users\">Users</Link>\r\n//           <Logout/>\r\n//         </div>\r\n//       </div>\r\n//       <div className='second'>\r\n//         <div className=\"table-container\">\r\n//           <div className='end'>\r\n//             <button className='edit btn-dash' onClick={togglePopup}>Add Product</button>\r\n//             {isOpen && (\r\n//               <div className=\"popup-overlay\">\r\n//                 <div className=\"popup-content\">\r\n//                   {error && <div className=\"error-message\">{error}</div>}\r\n//                   <form onSubmit={handleSubmit}>\r\n//                     <div className=\"form-group\">\r\n//                       <label htmlFor=\"name\">Name</label>\r\n//                       <input\r\n//                         type=\"text\"\r\n//                         name=\"name\"\r\n//                         id=\"name\"\r\n//                         placeholder=\"Type product name\"\r\n//                         value={newProduct.name}\r\n//                         onChange={handleInputChange}\r\n//                         required\r\n//                       />\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                       <label htmlFor=\"price\">Price</label>\r\n//                       <input\r\n//                         type=\"number\"\r\n//                         name=\"price\"\r\n//                         id=\"price\"\r\n//                         placeholder=\"$2999\"\r\n//                         value={newProduct.price}\r\n//                         onChange={handleInputChange}\r\n//                         required\r\n//                       />\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                       <label htmlFor=\"category\">Category</label>\r\n//                       <select\r\n//                         id=\"category\"\r\n//                         name=\"category\"\r\n//                         value={newProduct.category}\r\n//                         onChange={handleInputChange}\r\n//                         required\r\n//                       >\r\n//                         <option value=\"\">Select category</option>\r\n//                         <option value=\"men\">Men</option>\r\n//                         <option value=\"women\">Women</option>\r\n//                         <option value=\"kids\">Kids</option>\r\n//                       </select>\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                       <label htmlFor=\"description\">Description</label>\r\n//                       <textarea\r\n//                         id=\"description\"\r\n//                         name=\"description\"\r\n//                         rows=\"4\"\r\n//                         placeholder=\"Enter product description here\"\r\n//                         value={newProduct.description}\r\n//                         onChange={handleInputChange}\r\n//                         required\r\n//                       ></textarea>\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                       <label htmlFor=\"discount\">Discount</label>\r\n//                       <select\r\n//                         id=\"discount\"\r\n//                         name=\"discount\"\r\n//                         value={newProduct.discount}\r\n//                         onChange={handleInputChange}\r\n//                       >\r\n//                         <option value=\"0\">No</option>\r\n//                         <option value=\"5\">5%</option>\r\n//                         <option value=\"10\">10%</option>\r\n//                         <option value=\"20\">20%</option>\r\n//                         <option value=\"30\">30%</option>\r\n//                         <option value=\"40\">40%</option>\r\n//                         <option value=\"50\">50%</option>\r\n//                       </select>\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n//                       <label htmlFor=\"stock\">Stock</label>\r\n//                       <input\r\n//                         type=\"number\"\r\n//                         name=\"stock\"\r\n//                         id=\"stock\"\r\n//                         placeholder=\"10\"\r\n//                         value={newProduct.stock}\r\n//                         onChange={handleInputChange}\r\n//                         required\r\n//                       />\r\n//                     </div>\r\n\r\n//                     <div className=\"form-buttons\">\r\n//                       <button\r\n//                         type=\"submit\"\r\n//                         className=\"btn primary\"\r\n//                         disabled={loading}\r\n//                       >\r\n//                         {loading ? 'Adding...' : 'Add product'}\r\n//                       </button>\r\n//                       <button\r\n//                         type=\"button\"\r\n//                         className=\"btn cancel\"\r\n//                         onClick={togglePopup}\r\n//                       >\r\n//                         <svg\r\n//                           aria-hidden=\"true\"\r\n//                           className=\"icon\"\r\n//                           fill=\"none\"\r\n//                           stroke=\"currentColor\"\r\n//                           viewBox=\"0 0 24 24\"\r\n//                         >\r\n//                           <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n//                         </svg>\r\n//                         Cancel\r\n//                       </button>\r\n//                     </div>\r\n//                   </form>\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//           <h2>Product table</h2>\r\n//           {error && <div className=\"error-message\">{error}</div>}\r\n//           <table className=\"custom-table\">\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>ID</th>\r\n//                 <th>Name</th>\r\n//                 <th>Price</th>\r\n//                 <th>Modify</th>\r\n//                 <th>Delete</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {poItems.map((product) => (\r\n//                 <tr key={product.id}>\r\n//                   <td>#{product.id}</td>\r\n//                   <td>{product.name}</td>\r\n//                   <td>${product.price}</td>\r\n//                   <td>\r\n//                     <button\r\n//                       className=\"btn-dash edit\"\r\n//                       onClick={() => handleEditClick(product)}\r\n//                     >\r\n//                       <i className=\"fas fa-edit\"></i>\r\n//                     </button>\r\n//                   </td>\r\n//                   <td>\r\n//                     <button\r\n//                       className=\"btn-dash red\"\r\n//                       onClick={() => handleDeleteClick(product.id)}\r\n//                     >\r\n//                       <i className=\"fa-solid fa-trash\"></i>\r\n//                     </button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </div>\r\n      \r\n//       {isEditOpen && currentProduct && (\r\n//         <EditProductForm\r\n//           product={currentProduct}\r\n//           onClose={() => setIsEditOpen(false)}\r\n//           onProductUpdated={handleProductUpdated}\r\n//         />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AdminDashboard;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport Logout from '../Autentification/logout';\r\nimport { deleteProduct, getAllProducts, addProduct, updateProduct } from '../../services/productService';\r\nimport EditProductForm from '../product/EditProductForm';\r\n\r\nconst AdminDashboard = ({ shopItems, setShopItems }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isEditOpen, setIsEditOpen] = useState(false);\r\n  const [currentProduct, setCurrentProduct] = useState(null);\r\n  const [newProduct, setNewProduct] = useState({\r\n    name: '',\r\n    price: '',\r\n    category: '',\r\n    description: '',\r\n    discount: '0',\r\n    gender: '',\r\n    image_url: './images/shops/shop-1.png', // Default image\r\n    size: 'M',\r\n    stock: 10\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // // Fetch products when component mounts\r\n  // useEffect(() => {\r\n  //   const fetchProducts = async () => {\r\n  //     try {\r\n  //       setLoading(true);\r\n  //       const data = await getAllProducts();\r\n  //       setProducts(data);\r\n  //       // Also update shopItems if it's meant to be in sync\r\n  //       if (setShopItems) {\r\n  //         setShopItems(data);\r\n  //       }\r\n  //     } catch (err) {\r\n  //       setError(`Failed to fetch products: ${err.message}`);\r\n  //     } finally {\r\n  //       setLoading(false);\r\n  //     }\r\n  //   };\r\n    \r\n  //   fetchProducts();\r\n  // }, []); // No need for dependencies here\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getAllProducts();\r\n        setProducts(data);\r\n        // Also update shopItems if it's meant to be in sync\r\n        if (setShopItems) {\r\n          setShopItems(data);\r\n        }\r\n      } catch (err) {\r\n        setError(`Failed to fetch products: ${err.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchProducts();\r\n  }, [setShopItems]); // Add setShopItems as dependency\r\n\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n    // Reset form when opening/closing\r\n    setNewProduct({\r\n      name: '',\r\n      price: '',\r\n      category: '',\r\n      description: '',\r\n      discount: '0',\r\n      gender: '',\r\n      image_url: './images/shops/shop-1.png',\r\n      size: 'M',\r\n      stock: 10\r\n    });\r\n    setError(null);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewProduct({\r\n      ...newProduct,\r\n      [name]: name === 'price' || name === 'stock' ? Number(value) : value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    // Map category to gender for consistency with your data model\r\n    let genderValue = 'unisex';\r\n    if (newProduct.category === 'men') genderValue = 'men';\r\n    if (newProduct.category === 'women') genderValue = 'women';\r\n    if (newProduct.category === 'kids') genderValue = 'kids';\r\n\r\n    // Create product DTO to match your backend expectations\r\n    const productDTO = {\r\n      name: newProduct.name,\r\n      price: Number(newProduct.price),\r\n      description: newProduct.description,\r\n      discount: Number(newProduct.discount),\r\n      gender: genderValue,\r\n      image_url: newProduct.image_url,\r\n      size: newProduct.size,\r\n      stock: Number(newProduct.stock),\r\n      categoryId: 2 // Using default category ID from your sample data\r\n    };\r\n\r\n    try {\r\n      // Use the service function instead of direct fetch\r\n      const addedProduct = await addProduct(productDTO);\r\n\r\n      // Update both state arrays with the new product\r\n      setProducts(prevItems => [...prevItems, addedProduct]);\r\n      if (setShopItems) {\r\n        setShopItems(prevItems => [...prevItems, addedProduct]);\r\n      }\r\n\r\n      // Close the popup\r\n      togglePopup();\r\n    } catch (err) {\r\n      setError(`Failed to add product: ${err.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (product) => {\r\n    setCurrentProduct(product);\r\n    setIsEditOpen(true);\r\n  };\r\n\r\n  const handleProductUpdated = (updatedProduct) => {\r\n    // Update the product in both state arrays\r\n    setProducts(prevItems =>\r\n      prevItems.map(item => item.id === updatedProduct.id ? updatedProduct : item)\r\n    );\r\n    if (setShopItems) {\r\n      setShopItems(prevItems =>\r\n        prevItems.map(item => item.id === updatedProduct.id ? updatedProduct : item)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = async (productId) => {\r\n    if (window.confirm('Are you sure you want to delete this product?')) {\r\n      try {\r\n        setLoading(true);\r\n        await deleteProduct(productId);\r\n        \r\n        // Remove the product from both state arrays\r\n        setProducts(prevItems => prevItems.filter(item => item.id !== productId));\r\n        if (setShopItems) {\r\n          setShopItems(prevItems => prevItems.filter(item => item.id !== productId));\r\n        }\r\n      } catch (err) {\r\n        setError(`Failed to delete product: ${err.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='dashboard'>\r\n      <div className='first'>\r\n        <div className=\"sidebar\">\r\n          <h2>Dashboard</h2>\r\n          <Link to=\"/product\">Products</Link>\r\n          <Link to=\"/countproduct\">CountProduct</Link>\r\n          <Link to=\"/users\">Users</Link>\r\n          <Logout/>\r\n        </div>\r\n      </div>\r\n      <div className='second'>\r\n        <div className=\"table-container\">\r\n          <div className='end'>\r\n            <button className='edit btn-dash' onClick={togglePopup}>Add Product</button>\r\n            {isOpen && (\r\n              <div className=\"popup-overlay\">\r\n                <div className=\"popup-content\">\r\n                  {error && <div className=\"error-message\">{error}</div>}\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"name\">Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        placeholder=\"Type product name\"\r\n                        value={newProduct.name}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"price\">Price</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"price\"\r\n                        id=\"price\"\r\n                        placeholder=\"$2999\"\r\n                        value={newProduct.price}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"category\">Category</label>\r\n                      <select\r\n                        id=\"category\"\r\n                        name=\"category\"\r\n                        value={newProduct.category}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                      >\r\n                        <option value=\"\">Select category</option>\r\n                        <option value=\"men\">Men</option>\r\n                        <option value=\"women\">Women</option>\r\n                        <option value=\"kids\">Kids</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"description\">Description</label>\r\n                      <textarea\r\n                        id=\"description\"\r\n                        name=\"description\"\r\n                        rows=\"4\"\r\n                        placeholder=\"Enter product description here\"\r\n                        value={newProduct.description}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                      ></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"discount\">Discount</label>\r\n                      <select\r\n                        id=\"discount\"\r\n                        name=\"discount\"\r\n                        value={newProduct.discount}\r\n                        onChange={handleInputChange}\r\n                      >\r\n                        <option value=\"0\">No</option>\r\n                        <option value=\"5\">5%</option>\r\n                        <option value=\"10\">10%</option>\r\n                        <option value=\"20\">20%</option>\r\n                        <option value=\"30\">30%</option>\r\n                        <option value=\"40\">40%</option>\r\n                        <option value=\"50\">50%</option>\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"stock\">Stock</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"stock\"\r\n                        id=\"stock\"\r\n                        placeholder=\"10\"\r\n                        value={newProduct.stock}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"form-buttons\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn primary\"\r\n                        disabled={loading}\r\n                      >\r\n                        {loading ? 'Adding...' : 'Add product'}\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn cancel\"\r\n                        onClick={togglePopup}\r\n                      >\r\n                        <svg\r\n                          aria-hidden=\"true\"\r\n                          className=\"icon\"\r\n                          fill=\"none\"\r\n                          stroke=\"currentColor\"\r\n                          viewBox=\"0 0 24 24\"\r\n                        >\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                        </svg>\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <h2>Product table</h2>\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          {loading && <div className=\"loading\">Loading...</div>}\r\n          <table className=\"custom-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n                <th>Modify</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product.id}>\r\n                  <td>#{product.id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn-dash edit\"\r\n                      onClick={() => handleEditClick(product)}\r\n                    >\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </button>\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"btn-dash red\"\r\n                      onClick={() => handleDeleteClick(product.id)}\r\n                    >\r\n                      <i className=\"fa-solid fa-trash\"></i>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      \r\n      {isEditOpen && currentProduct && (\r\n        <EditProductForm\r\n          product={currentProduct}\r\n          onClose={() => setIsEditOpen(false)}\r\n          onProductUpdated={handleProductUpdated}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":";AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module"}