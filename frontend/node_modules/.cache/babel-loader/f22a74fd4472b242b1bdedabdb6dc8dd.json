{"ast":null,"code":"// // src/services/productService.js\n\n// // Function to add a new product\n// export const addProduct = async (productData) => {\n//   try {\n//     const response = await fetch('/api/products', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(productData)\n//     });\n\n//     if (!response.ok) {\n//       throw new Error(`Error ${response.status}: ${response.statusText}`);\n//     }\n\n//     return await response.json();\n//   } catch (error) {\n//     console.error('Error adding product:', error);\n//     throw error;\n//   }\n// };\n\n// export const deleteProduct = async (productId) => {\n//   try {\n//     const response = await fetch(`http://localhost:8080/api/products/${productId}`, {\n//       method: 'DELETE',\n//     });\n\n//     if (!response.ok) {\n//       throw new Error(`Error ${response.status}: ${response.statusText}`);\n//     }\n\n//     return true;\n//   } catch (error) {\n//     console.error('Error deleting product:', error);\n//     throw error;\n//   }\n// };\n\n// export const updateProduct = async (productId, productData) => {\n//   try {\n//     const response = await fetch(`http://localhost:8080/api/products/${productId}`, {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(productData)\n//     });\n\n//     if (!response.ok) {\n//       throw new Error(`Error ${response.status}: ${response.statusText}`);\n//     }\n\n//     return await response.json();\n//   } catch (error) {\n//     console.error('Error updating product:', error);\n//     throw error;\n//   }\n// };\n// export const allProducts = async () => {\n//   try {\n//     const response = await fetch('http://localhost:8080/api/products', {\n//       method: 'GET',\n//     });\n\n//     if (!response.ok) {\n//       throw new Error(`Error ${response.status}: ${response.statusText}`);\n//     }\n//     return await response.content.json();\n//   } catch (error) {\n//     console.error('Error fetching all products:', error);\n//     throw error;\n//   }\n// };\n\n// export const getAllProducts = async () => {\n//   try {\n//     const response = await fetch('http://localhost:8080/api/products');\n\n//     // Log status and response type\n//     console.log(\"Response status:\", response);\n\n//     // Check if response is ok (status 200-299)\n//     if (!response.ok) {\n//       // Try to get text content to see the error\n//       const textContent = await response.text();\n//       console.error(\"Error response:\", textContent);\n//       throw new Error(`HTTP error! Status: ${response.status\n// }`);\n//     }\n\n//     // Only try to parse JSON if we got a successful response\n//     return await response.json();\n//   } catch (error) {\n//     console.error(\"Error fetching products:\", error);\n//     throw error;\n//   }\n// };","map":{"version":3,"names":[],"sources":["C:/Users/salah/Downloads/project - Copie/src/services/productService.js"],"sourcesContent":["// // src/services/productService.js\r\n\r\n// // Function to add a new product\r\n// export const addProduct = async (productData) => {\r\n//   try {\r\n//     const response = await fetch('/api/products', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify(productData)\r\n//     });\r\n\r\n//     if (!response.ok) {\r\n//       throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n//     }\r\n\r\n//     return await response.json();\r\n//   } catch (error) {\r\n//     console.error('Error adding product:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// export const deleteProduct = async (productId) => {\r\n//   try {\r\n//     const response = await fetch(`http://localhost:8080/api/products/${productId}`, {\r\n//       method: 'DELETE',\r\n//     });\r\n\r\n//     if (!response.ok) {\r\n//       throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n//     }\r\n\r\n//     return true;\r\n//   } catch (error) {\r\n//     console.error('Error deleting product:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// export const updateProduct = async (productId, productData) => {\r\n//   try {\r\n//     const response = await fetch(`http://localhost:8080/api/products/${productId}`, {\r\n//       method: 'PUT',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify(productData)\r\n//     });\r\n\r\n//     if (!response.ok) {\r\n//       throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n//     }\r\n\r\n//     return await response.json();\r\n//   } catch (error) {\r\n//     console.error('Error updating product:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n// export const allProducts = async () => {\r\n//   try {\r\n//     const response = await fetch('http://localhost:8080/api/products', {\r\n//       method: 'GET',\r\n//     });\r\n\r\n//     if (!response.ok) {\r\n//       throw new Error(`Error ${response.status}: ${response.statusText}`);\r\n//     }\r\n//     return await response.content.json();\r\n//   } catch (error) {\r\n//     console.error('Error fetching all products:', error);\r\n//     throw error;\r\n//   }\r\n// };\r\n\r\n// export const getAllProducts = async () => {\r\n//   try {\r\n//     const response = await fetch('http://localhost:8080/api/products');\r\n\r\n//     // Log status and response type\r\n//     console.log(\"Response status:\", response);\r\n\r\n//     // Check if response is ok (status 200-299)\r\n//     if (!response.ok) {\r\n//       // Try to get text content to see the error\r\n//       const textContent = await response.text();\r\n//       console.error(\"Error response:\", textContent);\r\n//       throw new Error(`HTTP error! Status: ${response.status\r\n// }`);\r\n//     }\r\n\r\n//     // Only try to parse JSON if we got a successful response\r\n//     return await response.json();\r\n//   } catch (error) {\r\n//     console.error(\"Error fetching products:\", error);\r\n//     throw error;\r\n//   }\r\n// };"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module"}