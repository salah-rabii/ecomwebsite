{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { updateProduct } from '../../services/productService';\n\n// const EditProductForm = ({ product, onClose, onProductUpdated }) => {\n//   const [editedProduct, setEditedProduct] = useState({\n//     name: product.name,\n//     price: product.price,\n//     description: product.description,\n//     discount: product.discount,\n//     gender: product.gender,\n//     image_url: product.image_url,\n//     size: product.size,\n//     stock: product.stock,\n//     categoryId: product.categoryId || 2\n//   });\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   // Map gender to category for the form\n//   const getCategory = (gender) => {\n//     if (gender === 'men') return 'men';\n//     if (gender === 'women') return 'women';\n//     if (gender === 'kids') return 'kids';\n//     return '';\n//   };\n\n//   useEffect(() => {\n//     setEditedProduct({\n//       name: product.name,\n//       price: product.price,\n//       description: product.description,\n//       discount: product.discount,\n//       gender: product.gender,\n//       image_url: product.image_url,\n//       size: product.size,\n//       stock: product.stock,\n//       categoryId: product.categoryId || 2\n//     });\n//   }, [product]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setEditedProduct({\n//       ...editedProduct,\n//       [name]: name === 'price' || name === 'stock' || name === 'discount' ? Number(value) : value\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError(null);\n\n//     // Map category to gender for consistency with your data model\n//     let genderValue = editedProduct.gender;\n//     if (e.target.category) {\n//       if (e.target.category.value === 'men') genderValue = 'men';\n//       if (e.target.category.value === 'women') genderValue = 'women';\n//       if (e.target.category.value === 'kids') genderValue = 'kids';\n//     }\n\n//     // Create product DTO to match your backend expectations\n//     const productDTO = {\n//       id: product.id,\n//       name: editedProduct.name,\n//       price: Number(editedProduct.price),\n//       description: editedProduct.description,\n//       discount: Number(editedProduct.discount),\n//       gender: genderValue,\n//       image_url: editedProduct.image_url,\n//       size: editedProduct.size,\n//       stock: Number(editedProduct.stock),\n//       categoryId: editedProduct.categoryId\n//     };\n\n//     try {\n//       const updatedProduct = await updateProduct(product.id, productDTO);\n//       onProductUpdated(updatedProduct);\n//       onClose();\n//     } catch (err) {\n//       setError(`Failed to update product: ${err.message}`);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"popup-overlay\">\n//       <div className=\"popup-content\">\n//         <h3>Edit Product</h3>\n//         {error && <div className=\"error-message\">{error}</div>}\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"name\">Name</label>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               id=\"name\"\n//               value={editedProduct.name}\n//               onChange={handleInputChange}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"price\">Price</label>\n//             <input\n//               type=\"number\"\n//               name=\"price\"\n//               id=\"price\"\n//               value={editedProduct.price}\n//               onChange={handleInputChange}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"category\">Category</label>\n//             <select\n//               id=\"category\"\n//               name=\"category\"\n//               value={getCategory(editedProduct.gender)}\n//               onChange={handleInputChange}\n//               required\n//             >\n//               <option value=\"\">Select category</option>\n//               <option value=\"men\">Men</option>\n//               <option value=\"women\">Women</option>\n//               <option value=\"kids\">Kids</option>\n//             </select>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"description\">Description</label>\n//             <textarea\n//               id=\"description\"\n//               name=\"description\"\n//               rows=\"4\"\n//               value={editedProduct.description}\n//               onChange={handleInputChange}\n//               required\n//             ></textarea>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"discount\">Discount</label>\n//             <select\n//               id=\"discount\"\n//               name=\"discount\"\n//               value={editedProduct.discount}\n//               onChange={handleInputChange}\n//             >\n//               <option value=\"0\">No</option>\n//               <option value=\"5\">5%</option>\n//               <option value=\"10\">10%</option>\n//               <option value=\"20\">20%</option>\n//               <option value=\"30\">30%</option>\n//               <option value=\"40\">40%</option>\n//               <option value=\"50\">50%</option>\n//             </select>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"stock\">Stock</label>\n//             <input\n//               type=\"number\"\n//               name=\"stock\"\n//               id=\"stock\"\n//               value={editedProduct.stock}\n//               onChange={handleInputChange}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-buttons\">\n//             <button\n//               type=\"submit\"\n//               className=\"btn primary\"\n//               disabled={loading}\n//             >\n//               {loading ? 'Updating...' : 'Update product'}\n//             </button>\n//             <button\n//               type=\"button\"\n//               className=\"btn cancel\"\n//               onClick={onClose}\n//             >\n//               Cancel\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EditProductForm;\n\n// import React, { useState, useEffect } from 'react';\n// import { updateProduct } from '../../services/productService';\n\n// const EditProductForm = ({ product, onClose, onProductUpdated }) => {\n//   const [editedProduct, setEditedProduct] = useState({\n//     name: product.name || '',\n//     price: product.price || 0,\n//     description: product.description || '',\n//     discount: product.discount || 0,\n//     gender: product.gender || '',\n//     image_url: product.image_url || './images/shops/shop-1.png',\n//     size: product.size || 'M',\n//     stock: product.stock || 0,\n//     categoryId: product.categoryId || 2\n//   });\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   // Map gender to category for the form\n//   const getCategory = (gender) => {\n//     if (gender === 'men') return 'men';\n//     if (gender === 'women') return 'women';\n//     if (gender === 'kids') return 'kids';\n//     return '';\n//   };\n\n//   useEffect(() => {\n//     setEditedProduct({\n//       name: product.name || '',\n//       price: product.price || 0,\n//       description: product.description || '',\n//       discount: product.discount || 0,\n//       gender: product.gender || '',\n//       image_url: product.image_url || './images/shops/shop-1.png',\n//       size: product.size || 'M',\n//       stock: product.stock || 0,\n//       categoryId: product.categoryId || 2\n//     });\n//   }, [product]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n\n//     if (name === 'category') {\n//       // Handle category selection by updating gender\n//       let genderValue = '';\n//       if (value === 'men') genderValue = 'men';\n//       if (value === 'women') genderValue = 'women';\n//       if (value === 'kids') genderValue = 'kids';\n\n//       setEditedProduct({\n//         ...editedProduct,\n//         gender: genderValue\n//       });\n//     } else {\n//       // Handle other inputs normally\n//       setEditedProduct({\n//         ...editedProduct,\n//         [name]: name === 'price' || name === 'stock' || name === 'discount' ? Number(value) : value\n//       });\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setError(null);\n\n//     // Create product DTO to match your backend expectations\n//     const productDTO = {\n//       id: product.id,\n//       name: editedProduct.name,\n//       price: Number(editedProduct.price),\n//       description: editedProduct.description,\n//       discount: Number(editedProduct.discount),\n//       gender: editedProduct.gender,\n//       image_url: editedProduct.image_url,\n//       size: editedProduct.size,\n//       stock: Number(editedProduct.stock),\n//       categoryId: editedProduct.categoryId\n//     };\n\n//     try {\n//       const updatedProduct = await updateProduct(product.id, productDTO);\n//       onProductUpdated(updatedProduct);\n//       onClose();\n//     } catch (err) {\n//       setError(`Failed to update product: ${err.message}`);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"popup-overlay\">\n//       <div className=\"popup-content\">\n//         <h3>Edit Product</h3>\n//         {error && <div className=\"error-message\">{error}</div>}\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"edit-name\">Name</label>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               id=\"edit-name\"\n//               value={editedProduct.name}\n//               onChange={handleInputChange}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"edit-price\">Price</label>\n//             <input\n//               type=\"number\"\n//               name=\"price\"\n//               id=\"edit-price\"\n//               value={editedProduct.price}\n//               onChange={handleInputChange}\n//               required\n//               min=\"0\"\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"edit-category\">Category</label>\n//             <select\n//               id=\"edit-category\"\n//               name=\"category\"\n//               value={getCategory(editedProduct.gender)}\n//               onChange={handleInputChange}\n//             >\n//               <option value=\"\">Select category</option>\n//               <option value=\"men\">Men</option>\n//               <option value=\"women\">Women</option>\n//               <option value=\"kids\">Kids</option>\n//             </select>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"edit-description\">Description</label>\n//             <textarea\n//               id=\"edit-description\"\n//               name=\"description\"\n//               rows=\"4\"\n//               value={editedProduct.description}\n//               onChange={handleInputChange}\n//               required\n//             ></textarea>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"edit-discount\">Discount</label>\n//             <select\n//               id=\"edit-discount\"\n//               name=\"discount\"\n//               value={editedProduct.discount}\n//               onChange={handleInputChange}\n//             >\n//               <option value=\"0\">No</option>\n//               <option value=\"5\">5%</option>\n//               <option value=\"10\">10%</option>\n//               <option value=\"20\">20%</option>\n//               <option value=\"30\">30%</option>\n//               <option value=\"40\">40%</option>\n//               <option value=\"50\">50%</option>\n//             </select>\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"edit-stock\">Stock</label>\n//             <input\n//               type=\"number\"\n//               name=\"stock\"\n//               id=\"edit-stock\"\n//               value={editedProduct.stock}\n//               onChange={handleInputChange}\n//               required\n//               min=\"0\"\n//             />\n//           </div>\n\n//           <div className=\"form-buttons\">\n//             <button\n//               type=\"submit\"\n//               className=\"btn primary\"\n//               disabled={loading}\n//             >\n//               {loading ? 'Updating...' : 'Update product'}\n//             </button>\n//             <button\n//               type=\"button\"\n//               className=\"btn cancel\"\n//               onClick={onClose}\n//             >\n//               Cancel\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EditProductForm;\n\nZZZYyY;","map":{"version":3,"names":["ZZZYyY"],"sources":["C:/Users/salah/Downloads/project - Copie/src/components/product/EditProductForm.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { updateProduct } from '../../services/productService';\r\n\r\n// const EditProductForm = ({ product, onClose, onProductUpdated }) => {\r\n//   const [editedProduct, setEditedProduct] = useState({\r\n//     name: product.name,\r\n//     price: product.price,\r\n//     description: product.description,\r\n//     discount: product.discount,\r\n//     gender: product.gender,\r\n//     image_url: product.image_url,\r\n//     size: product.size,\r\n//     stock: product.stock,\r\n//     categoryId: product.categoryId || 2\r\n//   });\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   // Map gender to category for the form\r\n//   const getCategory = (gender) => {\r\n//     if (gender === 'men') return 'men';\r\n//     if (gender === 'women') return 'women';\r\n//     if (gender === 'kids') return 'kids';\r\n//     return '';\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     setEditedProduct({\r\n//       name: product.name,\r\n//       price: product.price,\r\n//       description: product.description,\r\n//       discount: product.discount,\r\n//       gender: product.gender,\r\n//       image_url: product.image_url,\r\n//       size: product.size,\r\n//       stock: product.stock,\r\n//       categoryId: product.categoryId || 2\r\n//     });\r\n//   }, [product]);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setEditedProduct({\r\n//       ...editedProduct,\r\n//       [name]: name === 'price' || name === 'stock' || name === 'discount' ? Number(value) : value\r\n//     });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     setError(null);\r\n\r\n//     // Map category to gender for consistency with your data model\r\n//     let genderValue = editedProduct.gender;\r\n//     if (e.target.category) {\r\n//       if (e.target.category.value === 'men') genderValue = 'men';\r\n//       if (e.target.category.value === 'women') genderValue = 'women';\r\n//       if (e.target.category.value === 'kids') genderValue = 'kids';\r\n//     }\r\n\r\n//     // Create product DTO to match your backend expectations\r\n//     const productDTO = {\r\n//       id: product.id,\r\n//       name: editedProduct.name,\r\n//       price: Number(editedProduct.price),\r\n//       description: editedProduct.description,\r\n//       discount: Number(editedProduct.discount),\r\n//       gender: genderValue,\r\n//       image_url: editedProduct.image_url,\r\n//       size: editedProduct.size,\r\n//       stock: Number(editedProduct.stock),\r\n//       categoryId: editedProduct.categoryId\r\n//     };\r\n\r\n//     try {\r\n//       const updatedProduct = await updateProduct(product.id, productDTO);\r\n//       onProductUpdated(updatedProduct);\r\n//       onClose();\r\n//     } catch (err) {\r\n//       setError(`Failed to update product: ${err.message}`);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"popup-overlay\">\r\n//       <div className=\"popup-content\">\r\n//         <h3>Edit Product</h3>\r\n//         {error && <div className=\"error-message\">{error}</div>}\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"name\">Name</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               id=\"name\"\r\n//               value={editedProduct.name}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"price\">Price</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               name=\"price\"\r\n//               id=\"price\"\r\n//               value={editedProduct.price}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"category\">Category</label>\r\n//             <select\r\n//               id=\"category\"\r\n//               name=\"category\"\r\n//               value={getCategory(editedProduct.gender)}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             >\r\n//               <option value=\"\">Select category</option>\r\n//               <option value=\"men\">Men</option>\r\n//               <option value=\"women\">Women</option>\r\n//               <option value=\"kids\">Kids</option>\r\n//             </select>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"description\">Description</label>\r\n//             <textarea\r\n//               id=\"description\"\r\n//               name=\"description\"\r\n//               rows=\"4\"\r\n//               value={editedProduct.description}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             ></textarea>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"discount\">Discount</label>\r\n//             <select\r\n//               id=\"discount\"\r\n//               name=\"discount\"\r\n//               value={editedProduct.discount}\r\n//               onChange={handleInputChange}\r\n//             >\r\n//               <option value=\"0\">No</option>\r\n//               <option value=\"5\">5%</option>\r\n//               <option value=\"10\">10%</option>\r\n//               <option value=\"20\">20%</option>\r\n//               <option value=\"30\">30%</option>\r\n//               <option value=\"40\">40%</option>\r\n//               <option value=\"50\">50%</option>\r\n//             </select>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"stock\">Stock</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               name=\"stock\"\r\n//               id=\"stock\"\r\n//               value={editedProduct.stock}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-buttons\">\r\n//             <button\r\n//               type=\"submit\"\r\n//               className=\"btn primary\"\r\n//               disabled={loading}\r\n//             >\r\n//               {loading ? 'Updating...' : 'Update product'}\r\n//             </button>\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"btn cancel\"\r\n//               onClick={onClose}\r\n//             >\r\n//               Cancel\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EditProductForm;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { updateProduct } from '../../services/productService';\r\n\r\n// const EditProductForm = ({ product, onClose, onProductUpdated }) => {\r\n//   const [editedProduct, setEditedProduct] = useState({\r\n//     name: product.name || '',\r\n//     price: product.price || 0,\r\n//     description: product.description || '',\r\n//     discount: product.discount || 0,\r\n//     gender: product.gender || '',\r\n//     image_url: product.image_url || './images/shops/shop-1.png',\r\n//     size: product.size || 'M',\r\n//     stock: product.stock || 0,\r\n//     categoryId: product.categoryId || 2\r\n//   });\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   // Map gender to category for the form\r\n//   const getCategory = (gender) => {\r\n//     if (gender === 'men') return 'men';\r\n//     if (gender === 'women') return 'women';\r\n//     if (gender === 'kids') return 'kids';\r\n//     return '';\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     setEditedProduct({\r\n//       name: product.name || '',\r\n//       price: product.price || 0,\r\n//       description: product.description || '',\r\n//       discount: product.discount || 0,\r\n//       gender: product.gender || '',\r\n//       image_url: product.image_url || './images/shops/shop-1.png',\r\n//       size: product.size || 'M',\r\n//       stock: product.stock || 0,\r\n//       categoryId: product.categoryId || 2\r\n//     });\r\n//   }, [product]);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n    \r\n//     if (name === 'category') {\r\n//       // Handle category selection by updating gender\r\n//       let genderValue = '';\r\n//       if (value === 'men') genderValue = 'men';\r\n//       if (value === 'women') genderValue = 'women';\r\n//       if (value === 'kids') genderValue = 'kids';\r\n      \r\n//       setEditedProduct({\r\n//         ...editedProduct,\r\n//         gender: genderValue\r\n//       });\r\n//     } else {\r\n//       // Handle other inputs normally\r\n//       setEditedProduct({\r\n//         ...editedProduct,\r\n//         [name]: name === 'price' || name === 'stock' || name === 'discount' ? Number(value) : value\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setLoading(true);\r\n//     setError(null);\r\n\r\n//     // Create product DTO to match your backend expectations\r\n//     const productDTO = {\r\n//       id: product.id,\r\n//       name: editedProduct.name,\r\n//       price: Number(editedProduct.price),\r\n//       description: editedProduct.description,\r\n//       discount: Number(editedProduct.discount),\r\n//       gender: editedProduct.gender,\r\n//       image_url: editedProduct.image_url,\r\n//       size: editedProduct.size,\r\n//       stock: Number(editedProduct.stock),\r\n//       categoryId: editedProduct.categoryId\r\n//     };\r\n\r\n//     try {\r\n//       const updatedProduct = await updateProduct(product.id, productDTO);\r\n//       onProductUpdated(updatedProduct);\r\n//       onClose();\r\n//     } catch (err) {\r\n//       setError(`Failed to update product: ${err.message}`);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"popup-overlay\">\r\n//       <div className=\"popup-content\">\r\n//         <h3>Edit Product</h3>\r\n//         {error && <div className=\"error-message\">{error}</div>}\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"edit-name\">Name</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               id=\"edit-name\"\r\n//               value={editedProduct.name}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"edit-price\">Price</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               name=\"price\"\r\n//               id=\"edit-price\"\r\n//               value={editedProduct.price}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//               min=\"0\"\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"edit-category\">Category</label>\r\n//             <select\r\n//               id=\"edit-category\"\r\n//               name=\"category\"\r\n//               value={getCategory(editedProduct.gender)}\r\n//               onChange={handleInputChange}\r\n//             >\r\n//               <option value=\"\">Select category</option>\r\n//               <option value=\"men\">Men</option>\r\n//               <option value=\"women\">Women</option>\r\n//               <option value=\"kids\">Kids</option>\r\n//             </select>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"edit-description\">Description</label>\r\n//             <textarea\r\n//               id=\"edit-description\"\r\n//               name=\"description\"\r\n//               rows=\"4\"\r\n//               value={editedProduct.description}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             ></textarea>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"edit-discount\">Discount</label>\r\n//             <select\r\n//               id=\"edit-discount\"\r\n//               name=\"discount\"\r\n//               value={editedProduct.discount}\r\n//               onChange={handleInputChange}\r\n//             >\r\n//               <option value=\"0\">No</option>\r\n//               <option value=\"5\">5%</option>\r\n//               <option value=\"10\">10%</option>\r\n//               <option value=\"20\">20%</option>\r\n//               <option value=\"30\">30%</option>\r\n//               <option value=\"40\">40%</option>\r\n//               <option value=\"50\">50%</option>\r\n//             </select>\r\n//           </div>\r\n\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"edit-stock\">Stock</label>\r\n//             <input\r\n//               type=\"number\"\r\n//               name=\"stock\"\r\n//               id=\"edit-stock\"\r\n//               value={editedProduct.stock}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//               min=\"0\"\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"form-buttons\">\r\n//             <button\r\n//               type=\"submit\"\r\n//               className=\"btn primary\"\r\n//               disabled={loading}\r\n//             >\r\n//               {loading ? 'Updating...' : 'Update product'}\r\n//             </button>\r\n//             <button\r\n//               type=\"button\"\r\n//               className=\"btn cancel\"\r\n//               onClick={onClose}\r\n//             >\r\n//               Cancel\r\n//             </button>\r\n//           </div>\r\n//         </form>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EditProductForm;\r\n\r\n\r\nZZZYyY"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module"}